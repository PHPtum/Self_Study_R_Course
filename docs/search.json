{
  "articles": [
    {
      "path": "C0_course_introduction.html",
      "title": "Course Introduction",
      "description": "Please read through the course introduction before you start with the first chapter.\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nScope\r\nPrior knowledge\r\nLearning outcomes\r\nCourse Mechanics\r\nTime management\r\nTips on working with R\r\nTroubleshooting\r\n\r\nScope\r\nThe purpose of this course is to teach you basic R programming skills in a well structured way and a reasonable amount of time. No prior knowledge regarding R or other programming languages are required before starting with the Self-Study R Course (SSRC).\r\nThis course is not about teaching you statistics. Hence, results (e.g. of a regression model) or plots are not interpreted in the sample solutions. Obviously, understanding the methods you are applying with R and the interpretation of the respective results should be a crucial part of any data analysis project you are doing. However, to keep this course focused and concise, we decided to ignore statistics and inference aspects to a large extent.\r\nWe assume participants to know some very basic statistics concepts. Which statistics concepts we consider to be very basic is described in the section below. In the chapters where some more advanced statistics methods are applied, we provide links to YouTube videos that explain the respective concepts in an intuitive way.\r\nPrior knowledge\r\nWe assume participants to know the statistics concepts that are presented in the list below.\r\nIf you do not know a concept, just click on it. You will then be redirected to a YouTube video that explains the concept in an intuitive way.\r\nVariable\r\nDistribution\r\nNormal Distribution\r\nMean and Standard Deviation\r\nP-value\r\nCorrelation\r\nLearning outcomes\r\nAfter successfully completing this course, you should be able to\r\nUse R as a calculator and to create vectors, matrices and data frames in R.\r\nLoad a dataset into R and to create subsets and summary statistics for it.\r\nDo basic data manipulations (e.g. rename variables, create new variables) in R.\r\nCreate plots that visualize variation and covariation of different types of variables in R.\r\nEstimate regression models in R and use their results for prediction purposes.\r\nCreate functions that facilitate an easy repetition of various analysis steps in R.\r\nUnderstand the concept of loops and how they can be efficiently used in R.\r\nUse R Markdown to produce reports that summarize the process and results of a data analytics project.\r\nDo a (simple) data analytics project in R completely on your own.\r\nAlthough the SSRC covers a lot of important and relevant aspects, it still scratches at the surface of the R universe. If you work with real world data or if you have to apply more complex statistical methods, you will have to extent your R skill set beyond what is covered in the SSRC. This course is supposed to lay the foundation for solving such problems in R, though. Because of that, the overarching learning objective of this course is that you learn how to learn stuff in R by yourself. This is why the content and teaching parts of the SSRC are collected from diverse, free and immediately available web sources and not customized videos produced by ourselves.\r\nCourse Mechanics\r\nThe SSRC consists of eight chapters that are building up on each other. Each chapter has its own tab on this website. The eight chapters are:\r\nGetting Started\r\nData Analysis Basics\r\nData Manipulation\r\nData Visualization\r\nRegression Models\r\nFunctions and Loops\r\nR Markdown\r\nCase Study\r\nAll chapters (except chapter 8) are structured in the same way. At the core of each chapter is an exercise sheet you are supposed to solve throughout the chapter. An instructions document that is provided in the sub-tab “Instructions” guides you through the process of completing the respective exercise sheet. The instructions document tells you step by step what you have to do to solve the exercise sheet. Usually you will be asked to e.g. watch a YouTube video that teaches you the R skills that are needed to solve the subsequent task(s) of the exercise sheet. In a next step, you will then be asked to solve exactly those tasks.\r\nTo make the process of solving the exercise sheets more convenient, we also provide an R-script template for each exercise sheet.\r\nThere is also a sample solution for each of the exercise sheets and the case study. However, we recommend that you really try hard to solve the exercise sheets on your own before you check out the sample solution.\r\nIf you have problems with working with the SSRC, please check out the FAQs. If the FAQs cannot help you, you can also contact us via e-mail (to php@sg.tum.de, subject: SSRC).\r\nTime management\r\nThe time you will need for a particular chapter and the whole SSRC depends on your programming experience, accuracy, pragmatism etc. This means that it is impossible to make a general statement regarding time requirements. However, to facilitate better planning for you, we at least provide a rough time estimate for each of the chapters below. If you need more time for one or the other chapter, you should not feel bad about it, though.\r\nRough Time Estimates:\r\nChapter 1: 2-3h\r\nChapter 2: 3-4h\r\nChapter 3: 3-4h\r\nChapter 4: 3-4h\r\nChapter 5: 2-3h\r\nChapter 6: 3-4h\r\nChapter 7: 2-3h\r\nChapter 8: 6-8h\r\nIn total the course will require a time effort of about 30 hours.\r\nWhen you invest your time to do the chapters is completely up to you. You can do the whole course in just one week, do one chapter per week, etc. However, since the chapters are building up on each other, you should not let to much time pass between doing the different chapters.\r\nTips on working with R\r\nThe R community is very active and helpful. There are YouTube videos, blog posts, forum discussions (e.g. Stackoverflow) on almost everything.\r\nFurthermore, many ebooks on learning and using R are free and available online: https://bookdown.org/\r\nIf you want to do something in R but you do not now how to do it…\r\nGoogle it!!!\r\nSearch for what you need (e.g. “rename variables”) and add “in R”\r\nThe information is almost certainly available, you just need to find it…;)\r\nEven experienced R users google all the time.\r\nTroubleshooting\r\nAs soon as you start working with R, you will also start getting error messages from R. Do not worry about that, this is absolutely normal. Even the most experienced R users regularly make this experience. The important thing is that you know how to deal with these error messages once they occur. Below you find a list of things that you could do when you get an error message:\r\nCheck whether all brackets are closed and located correctly.\r\nCheck whether you have installed and loaded all required packages.\r\nCheck your code for typos.\r\nCheck whether R´s case sensitivity might be the reason for the error.\r\nCheck for missing or unwarranted quotation marks.\r\nClose and restart R and RStudio\r\nGoogle the error message (or parts of it) and search for potential reasons that trigger this error message.\r\nIn 99.9 % of the cases this will do the job.\r\nIf you cannot find a solution in a reasonable amount of time, you should start looking for a workaround (e.g. a different R package).\r\n[Do not worry if you do not yet understand all of the bullet points above. After doing the first two chapters of the SSRC, this should all make sense to you.]\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:55:21+02:00"
    },
    {
      "path": "C1_exercise.html",
      "title": "C1 - Exercise Sheet",
      "description": "Here you find the exercise sheet for chapter 1: \"Getting Started\"\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nR as a calculator\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\n\r\nBasic R programming\r\nTask 5\r\nTask 6\r\nTask 7\r\nTask 8\r\n\r\n\r\nR as a calculator\r\nTask 1\r\nUse R to do the following calculations:\r\n\\(5 + 3 = ?\\)\r\n\\(3 - 8 = ?\\)\r\n\\(5 * 7 = ?\\)\r\n\\(9 : 6 = ?\\)\r\n\\(7^2 = ?\\)\r\n\\(exp(5) = ?\\)\r\n\\(log(9) = ?\\)\r\n\\(5,56 + 4,73 = ?\\)\r\nTask 2\r\nAssign a variable x the value of 5 and a variable y the value of 3.\r\nTask 3\r\nCreate the variable z as the product of x and y and in a next step check the value of z.\r\nTask 4\r\nRun the code line below:\r\n\r\n\r\n# Run\r\nw <- ((((25*(-13))/0.753))^2)*(-0.000466)\r\n\r\n\r\nUse logical operators to check the following things:\r\nIs w exactly equal to 100?\r\nIs w unequal to 50?\r\nIs w smaller than 0?\r\nIs w smaller or equal to -1?\r\nIs w larger than -70?\r\nIs w larger or equal to -100?\r\nBasic R programming\r\nTask 5\r\nCreate a vector that contains the numbers 21, 28, 31, 23 and 45 and call this vector bmi.\r\nTask 6\r\nCreate a vector that contains the words “subject_1”, “subject_2”, “subject_3”, “subject_4” and “subject_5” and call this vector names.\r\nTask 7\r\nCheck the types of the bmi and names vector.\r\nTask 8\r\nCombine the two vectors names and bmi in a list and call this list bmi_data. Check out the content of this list by calling it.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:55:43+02:00"
    },
    {
      "path": "C1_instructions.html",
      "title": "C1 - Instructions",
      "description": "Instructions for chapter 1: \"Getting Started\" \n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroduction\r\nFirst Steps\r\nStep 1\r\nStep 2\r\nStep 3\r\nStep 4\r\nStep 5\r\nStep 6\r\n\r\nR as a calculator\r\nStep 7\r\nStep 8\r\nStep 9\r\n\r\nBasic R programming\r\nStep 10\r\nStep 11\r\nStep 12\r\n\r\nAdditional Resources\r\n\r\nIntroduction\r\nIn this chapter you will\r\nLearn how to install R and R Studio on your computer\r\nGet familiar with some core features of the R programming language\r\nLearn how to use R as a calculator\r\nTo meet this chapter’s learning objectives, please complete the respective exercise sheet. The instructions below will guide you through the process of solving the exercise sheet.\r\nFirst Steps\r\nStep 1\r\nWatch the following YouTube Video:\r\nWhy you should use R\r\nStep 2\r\nIf you are using Windows, watch the following YouTube Video:\r\nInstall R and RStudio for Windows\r\nIf you are using Mac, watch the following YouTube Video:\r\nInstall R and RStudio for Mac\r\nComment: If you have R and R Studio already installed on your computer, you can skip this and the next step.\r\nStep 3\r\nInstall R and R Studio on your computer.\r\nStep 4\r\nWatch the following YouTube Video:\r\nIntroduction to RStudio\r\nStep 5\r\nOpen RStudio by yourself.\r\nStep 6\r\nBriefly check out the exercise sheet for chapter 1 to get an impression of what you need to learn/know to solve it.\r\nR as a calculator\r\nStep 7\r\nWatch the following YouTube Video:\r\nR as a calculator\r\nStep 8\r\nDownload and open the R -Script template to insert your solutions in RStudio:\r\nC1 - R Script Template\r\nComment: To download a file like the R script template from the SSRC website, just make a right click on the respective link and then select “save target as…” / “Ziel speichern unter…”.\r\nStep 9\r\nSolve Task 1-4 of the exercise sheet.\r\nBasic R programming\r\nStep 10\r\nDo the “Programming Basics” Tutorial offered in the Posit Cloud:\r\nProgramming Basics\r\nComment: It is not important that you understand every single detail in the tutorial. Rather try to grasp the main messages and basic concepts.\r\nStep 11\r\nFinish exercise sheet 1 and save the solution on your computer.\r\nStep 12\r\nCompare your solutions to the sample solution for exercise sheet 1.\r\nAdditional Resources\r\nWebsite: R as a calculator -> Nice overview of the most important mathematical and logical operators\r\nCheat Sheet: Base R -> Great overview of a large set of relevant R commands\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:56:04+02:00"
    },
    {
      "path": "C1_solution.html",
      "title": "C1 - Sample Solution",
      "description": "Here you find the sample solution for the exercise sheet of chapter 1\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nR as a calculator\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\n\r\nBasic R programming\r\nTask 5\r\nTask 6\r\nTask 7\r\nTask 8\r\n\r\n\r\nR as a calculator\r\nTask 1\r\nUse R to do the following calculations:\r\n\\(5 + 3 = ?\\)\r\n\\(3 - 8 = ?\\)\r\n\\(5 * 7 = ?\\)\r\n\\(9 : 6 = ?\\)\r\n\\(7^2 = ?\\)\r\n\\(exp(5) = ?\\)\r\n\\(log(9) = ?\\)\r\n\\(5,56 + 4,73 = ?\\)\r\n\r\n\r\n### Solve the calculations\r\n\r\n# 1\r\n5+3\r\n\r\n[1] 8\r\n\r\n# 2\r\n3-8\r\n\r\n[1] -5\r\n\r\n# 3\r\n5*7\r\n\r\n[1] 35\r\n\r\n# 4\r\n9/6\r\n\r\n[1] 1.5\r\n\r\n# 5\r\n7^2\r\n\r\n[1] 49\r\n\r\n# 6\r\nexp(5)\r\n\r\n[1] 148.4132\r\n\r\n# 7\r\nlog(9)\r\n\r\n[1] 2.197225\r\n\r\n# 8\r\n5.56 + 4.73\r\n\r\n[1] 10.29\r\n\r\nTask 2\r\nAssign a variable x the value of 5 and a variable y the value of 3.\r\n\r\n\r\n# Variable x\r\nx <- 5\r\n\r\n# Variable y\r\ny <- 3\r\n\r\n\r\nTask 3\r\nCreate the variable z as the product of x and y and in a next step check the value of z.\r\n\r\n\r\n# Create z by multiplying x and y\r\nz <- x*y\r\n\r\n# Check z\r\nz\r\n\r\n[1] 15\r\n\r\nTask 4\r\nRun the code line below:\r\n\r\n\r\n# Run\r\nw <- ((((25*(-13))/0.753))^2)*(-0.000466)\r\n\r\n\r\nUse logical operators to check the following things:\r\nIs w exactly equal to 100?\r\nIs w unequal to 50?\r\nIs w smaller than 0?\r\nIs w smaller or equal to -1?\r\nIs w larger than -70?\r\nIs w larger or equal to -100?\r\n\r\n\r\n# Is w exactly equal to 100?\r\nw == 100\r\n\r\n[1] FALSE\r\n\r\n# Is w unequal to 50?\r\nw != 50\r\n\r\n[1] TRUE\r\n\r\n# Is w smaller than 0?\r\nw < 0\r\n\r\n[1] TRUE\r\n\r\n# Is w smaller or equal to -1?\r\nw <= -1\r\n\r\n[1] TRUE\r\n\r\n# Is w larger than -70?\r\nw > -70\r\n\r\n[1] FALSE\r\n\r\n# Is w larger or equal to -100?\r\nw >= -100\r\n\r\n[1] TRUE\r\n\r\nBasic R programming\r\nTask 5\r\nCreate a vector that contains the numbers 21, 28, 31, 23 and 45 and call this vector bmi.\r\n\r\n\r\n# Create bmi vector\r\nbmi <- c(21, 28, 31, 23, 45)\r\n\r\n\r\nTask 6\r\nCreate a vector that contains the words “subject_1”, “subject_2”, “subject_3”, “subject_4” and “subject_5” and call this vector names.\r\n\r\n\r\n# Create names vector\r\nnames <- c(\"subject_1\", \"subject_2\", \"subject_3\", \"subject_4\", \"subject_5\")\r\n\r\n\r\nTask 7\r\nCheck the types of the bmi and names vector.\r\n\r\n\r\n# Check type of bmi\r\ntypeof(bmi) \r\n\r\n[1] \"double\"\r\n\r\n# Check type of names\r\ntypeof(names)\r\n\r\n[1] \"character\"\r\n\r\nTask 8\r\nCombine the two vectors names and bmi in a list and call this list bmi_data. Check out the content of this list by calling it.\r\n\r\n\r\n# Combine the bmi and names vector in list called bmi_data\r\nbmi_data <- list(names, bmi)\r\n\r\n# Call the list\r\nbmi_data\r\n\r\n[[1]]\r\n[1] \"subject_1\" \"subject_2\" \"subject_3\" \"subject_4\" \"subject_5\"\r\n\r\n[[2]]\r\n[1] 21 28 31 23 45\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:56:27+02:00"
    },
    {
      "path": "C2_exercise.html",
      "title": "C2 - Exercise Sheet",
      "description": "Here you find the exercise sheet for chapter 2: \"Data Analysis Basics\"\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nStart a project and import data\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\n\r\nIsolating data\r\nTask 7\r\nTask 8\r\nTask 9\r\nTask 10\r\n\r\nDeriving information\r\nTask 11\r\nTask 12\r\n\r\n\r\nStart a project and import data\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C2_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C2_template.R R Script.\r\nTask 4\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\nTask 5\r\nGet a first impression of the dataset by checking out the first 6 rows of the dataset and by looking at the data in the spreadsheet mode.\r\nTask 6\r\nInstall and load the tidyverse package.\r\n(If you have already installed the package before, loading the package is sufficient)\r\nIsolating data\r\nTask 7\r\nCreate a dataset that only contains the variables age and bmi and call this dataset SSRC_data_C2_task_7. Check out the first six rows of this dataset.\r\nTask 8\r\nCreate a dataset that only contains subjects with a bmi below 18.5 and call this dataset SSRC_data_C2_task_8. Check out the first six rows of this dataset.\r\nTask 9\r\nCreate a dataset that only contains individuals that have a low level of education and a bmi above 25 and call this dataset SSRC_data_C2_task_9. Check out the first six rows of this dataset.\r\nTask 10\r\nCreate a dataset that only contains individuals with a bmi between 18.5 and 25 and is restricted to the variables bmi and gender. Use the Pipe operator to do so and call the dataset SSRC_data_C2_task_10. Check out the first six rows of this dataset.\r\nDeriving information\r\nTask 11\r\nUse the summarize() command in combination with the filter() command to calculate the mean, maximum and minimum bmi of males that feature a low level of physical activity.\r\nTask 12\r\nUse the summarize() command in combination with the group_by() command to compare males and females with respect to their mean age and bmi.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:56:52+02:00"
    },
    {
      "path": "C2_instructions.html",
      "title": "C2 - Instructions",
      "description": "Instructions for chapter 2: \"Data Analysis Basics\" \n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroduction\r\nStart a project and import data\r\nStep 1\r\nStep 2\r\nStep 3\r\nStep 4\r\nStep 5\r\n\r\nIsolating data\r\nStep 6\r\n\r\nDeriving Information\r\nStep 7\r\nStep 8\r\n\r\nAdditional Resources\r\n\r\nIntroduction\r\nIn this chapter you will learn how to\r\nStart a project in R Studio\r\nLoad a dataset in R Studio\r\nSubset and summarize data with the dplyr package (part of the tidyverse)\r\nTo meet this chapter’s learning objectives, please complete the respective exercise sheet. The instructions below will guide you through the process of solving the exercise sheet.\r\nStart a project and import data\r\nStep 1\r\nBriefly check out the exercise sheet for chapter 2 to get an impression of what you need to learn/know to solve it.\r\nStep 2\r\nWatch the following YouTube Video:\r\nImport Packages and Load Data\r\nStep 3\r\nSolve Task 1-4 of the exercise sheet.\r\nStep 4\r\nDo the “Working with Tibbles” tutorial offered in the posit Cloud:\r\nWorking with Tibbles\r\nComment: The concept of a tibble is not important for you, but we recommend to do this tutorial anyway since it introduces the dataset you will work with in the subsequent tutorials.\r\nStep 5\r\nSolve tasks 6 of the exercise sheet.\r\nIsolating data\r\nStep 6\r\nDo the “Isolating data with dplyr” tutorial offered in the posit Cloud:\r\nIsolating data with dplyr\r\nSolve tasks 7-10 of the exercise sheet.\r\nDeriving Information\r\nStep 7\r\nDo the first four subchapters of the “Deriving Information with dplyr” tutorial offered in the posit Cloud:\r\nDeriving Information with dplyr\r\nSolve Tasks 11-12 of the exercise sheet.\r\nStep 8\r\nCompare your solutions to the sample solution for exercise sheet 2.\r\nAdditional Resources\r\nCheat Sheet: Data Transformation with dplyr -> Nice overview on how to transform data with dplyr\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:57:15+02:00"
    },
    {
      "path": "C2_solution.html",
      "title": "C2 - Sample Solution",
      "description": "Here you find the sample solution for the exercise sheet of chapter 2\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nStart a project and import data\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\n\r\nIsolating data\r\nTask 7\r\nTask 8\r\nTask 9\r\nTask 10\r\n\r\nDeriving information\r\nTask 11\r\nTask 12\r\n\r\n\r\nStart a project and import data\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C2_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C2_template.R R Script.\r\nTask 4\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\n\r\n\r\n# Load the dataset\r\nSSRC_data <- read.csv(\"SSRC_data.csv\")\r\n\r\n\r\nTask 5\r\nGet a first impression of the dataset by checking out the first 6 rows of the dataset and by looking at the data in the spreadsheet mode.\r\n\r\n\r\n# Check out the first 6 rows\r\nhead(SSRC_data)\r\n\r\n  age gender education_level physical_activity_level  bmi\r\n1  64   male          medium                     low 27.9\r\n2  59 female             low                  medium 27.5\r\n3  39 female            high                     low 27.4\r\n4  30 female            high                     low 24.2\r\n5  49   male          medium                     low 23.9\r\n6  37   male          medium                  medium 30.7\r\n\r\n# Produce spreadsheet mode\r\nView(SSRC_data)\r\n\r\n\r\nTask 6\r\nInstall and load the tidyverse package.\r\n(If you have already installed the package before, loading the package is sufficient)\r\n\r\n\r\n# Install tidyverse package (if you have not done it yet)\r\n# install.packages(\"tidyverse\")\r\n\r\n# Load tidyverse package\r\nlibrary(\"tidyverse\")\r\n\r\n\r\nIsolating data\r\nTask 7\r\nCreate a dataset that only contains the variables age and bmi and call this dataset SSRC_data_C2_task_7. Check out the first six rows of this dataset.\r\n\r\n\r\n# Create the dataset \r\nSSRC_data_C2_task_7 <- select(SSRC_data, age, bmi)\r\n\r\n# Check out dataset\r\nhead(SSRC_data_C2_task_7)\r\n\r\n  age  bmi\r\n1  64 27.9\r\n2  59 27.5\r\n3  39 27.4\r\n4  30 24.2\r\n5  49 23.9\r\n6  37 30.7\r\n\r\nTask 8\r\nCreate a dataset that only contains subjects with a bmi below 18.5 and call this dataset SSRC_data_C2_task_8. Check out the first six rows of this dataset.\r\n\r\n\r\n# Create the dataset \r\nSSRC_data_C2_task_8 <- filter(SSRC_data, bmi < 18.5)\r\n\r\n# Check out dataset\r\nhead(SSRC_data_C2_task_8)\r\n\r\n  age gender education_level physical_activity_level  bmi\r\n1  28   male          medium                     low 15.8\r\n2  62 female            high                     low 18.3\r\n3  31   male            high                     low 17.4\r\n4  31   male            high                  medium 17.3\r\n5  53   male             low                     low 16.8\r\n6  27 female          medium                  medium 17.3\r\n\r\nTask 9\r\nCreate a dataset that only contains individuals that have a low level of education and a bmi above 25 and call this dataset SSRC_data_C2_task_9. Check out the first six rows of this dataset.\r\n\r\n\r\n# Create the dataset\r\nSSRC_data_C2_task_9 <- filter(SSRC_data, education_level == \"low\" & bmi > 25)\r\n\r\n# Check out dataset\r\nhead(SSRC_data_C2_task_9)\r\n\r\n  age gender education_level physical_activity_level  bmi\r\n1  59 female             low                  medium 27.5\r\n2  57 female             low                     low 35.3\r\n3  40 female             low                     low 26.3\r\n4  56 female             low                  medium 33.7\r\n5  67   male             low                     low 31.5\r\n6  71 female             low                     low 29.6\r\n\r\nTask 10\r\nCreate a dataset that only contains individuals with a bmi between 18.5 and 25 and is restricted to the variables bmi and gender. Use the Pipe operator to do so and call the dataset SSRC_data_C2_task_10. Check out the first six rows of this dataset.\r\n\r\n\r\n# Create the dataset \r\nSSRC_data_C2_task_10 <- SSRC_data %>% \r\n                        filter(bmi >= 18.5 & bmi <= 25) %>% \r\n                        select(bmi, gender)\r\n\r\n# Check out dataset\r\nhead(SSRC_data_C2_task_10)\r\n\r\n   bmi gender\r\n1 24.2 female\r\n2 23.9   male\r\n3 18.5 female\r\n4 24.1   male\r\n5 23.1 female\r\n6 23.1   male\r\n\r\nDeriving information\r\nTask 11\r\nUse the summarize() command in combination with the filter() command to calculate the mean, maximum and minimum bmi of males that feature a low level of physical activity.\r\n\r\n\r\n# Calculate mean, maximum and minimum bmi \r\nSSRC_data %>% \r\n  filter(gender == \"male\" & physical_activity_level == \"low\") %>% \r\n  summarize(mean_bmi = mean(bmi), maximum_bmi = max(bmi), minimum_bmi = min(bmi))\r\n\r\n  mean_bmi maximum_bmi minimum_bmi\r\n1 27.46175          55        15.8\r\n\r\nTask 12\r\nUse the summarize() command in combination with the group_by() command to compare males and females with respect to their mean age and bmi.\r\n\r\n\r\n# Compare males and females with respect to age and bmi \r\nSSRC_data %>% \r\n  group_by(gender) %>% \r\n  summarize(mean_bmi = mean(bmi), mean_age = mean(age))\r\n\r\n# A tibble: 2 × 3\r\n  gender mean_bmi mean_age\r\n  <chr>     <dbl>    <dbl>\r\n1 female     26.4     47.1\r\n2 male       27.2     48.4\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:57:38+02:00"
    },
    {
      "path": "C3_exercise.html",
      "title": "C3 - Exercise Sheet",
      "description": "Here you find the exercise sheet for chapter 3: \"Data Manipulation\"\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nStart a project and import data\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\n\r\nThe mutate() command\r\nTask 7\r\n\r\nCheck variable types\r\nTask 8\r\n\r\nFactor and Indicator Variables\r\nTask 9\r\nTask 10\r\nTask 11\r\nTask 12\r\nTask 13\r\n\r\n\r\nStart a project and import data\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C3_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C3_template.R R Script.\r\nTask 4\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\nTask 5\r\nGet a first impression of the dataset by checking out the first 6 rows of the dataset.\r\nTask 6\r\nInstall and load the tidyverse package.\r\n(If you have already installed the package before, loading the package is sufficient)\r\nThe mutate() command\r\nTask 7\r\nCreate a new variable that contains the age of an individual in months. Call the variable age_in_months and add it to the SSRC dataset. Check out the first six rows of the dataset after creating this new variable.\r\nCheck variable types\r\nTask 8\r\nUse the str() command to check the variable types in the SSRC data.\r\nFactor and Indicator Variables\r\nTask 9\r\nTransform the variables gender, education_level and physical_activity_level into factor variables. Use the str() command to check out whether it worked.\r\nTask 10\r\nCheck the level order of the variable physical_activity_level and adjust it if necessary to “low”, “medium,”high”.\r\nTask 11\r\nUse the mutate() command to create a logical variable indicating whether an individual has a bmi larger than 25 and call this variable overweight_indicator. Check the class of the new variable using the class() and str() command.\r\nTask 12\r\nChange the name of the variable gender into sex. Use the str() command to check whether it worked.\r\nTask 13\r\nCreate a new factor variable that indicates whether an individual is “underweight” (bmi < 18.5), “normal” (bmi between 18.5 and 25) or “overweight” (bmi > 25). Call this variable weight_category. Use the str() and head() command to check out whether it worked out.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:58:03+02:00"
    },
    {
      "path": "C3_instructions.html",
      "title": "C3 - Instructions",
      "description": "Instructions for chapter 3: \"Data Manipulation\" \n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroduction\r\nGetting ready\r\nStep 1\r\nStep 2\r\nStep 3\r\n\r\nThe mutate() command\r\nStep 4\r\n\r\nManipulating variables\r\nStep 5\r\nStep 6\r\nStep 7\r\nStep 8\r\n\r\nAdditional Resources\r\n\r\nIntroduction\r\nIn this chapter you will learn how to\r\nDifferentiate variable types\r\nModify existing variables\r\nCreate new variables\r\nTo meet this chapter’s learning objectives, please complete the respective exercise sheet. The instructions below will guide you through the process of solving the exercise sheet.\r\nGetting ready\r\nStep 1\r\nBriefly check out the exercise sheet for chapter 3 to get an impression of what you need to learn/know to solve it.\r\nStep 2\r\nWatch the following YouTube Video:\r\nImport Packages and Load Data\r\nStep 3\r\nSolve tasks 1-6 of the exercise sheet.\r\nThe mutate() command\r\nStep 4\r\nDo the “mutate” subchapter of the “Deriving Information with dplyr” tutorial offered in the posit Cloud:\r\nDeriving Information with dplyr\r\nSolve task 7 of the exercise sheet.\r\nManipulating variables\r\nStep 5\r\nWatch the following Video:Data Types\r\nSolve tasks 8-11.\r\nStep 6\r\nWatch the following Video:\r\nRename Variables\r\nSolve task 12.\r\nStep 7\r\nWatch the following Video:\r\nCreate Categorical Variables\r\nSolve task 13.\r\nStep 8\r\nCompare your solutions to the sample solution for exercise sheet 3.\r\nAdditional Resources\r\nCheat Sheet: Work with factor variables -> Great overview on how to work with factor variables in the tidyverse context\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:58:23+02:00"
    },
    {
      "path": "C3_solution.html",
      "title": "C3 - Sample Solution",
      "description": "Here you find the sample solution for the exercise sheet of chapter 3\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nStart a project and import data\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\n\r\nThe mutate() command\r\nTask 7\r\n\r\nCheck variable types\r\nTask 8\r\n\r\nFactor and Indicator Variables\r\nTask 9\r\nTask 10\r\nTask 11\r\nTask 12\r\nTask 13\r\n\r\n\r\nStart a project and import data\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C3_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C3_template.R R Script.\r\nTask 4\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\n\r\n\r\n# Load the dataset\r\nSSRC_data <- read.csv(\"SSRC_data.csv\")\r\n\r\n\r\nTask 5\r\nGet a first impression of the dataset by checking out the first 6 rows of the dataset.\r\n\r\n\r\n# Check out the first 6 rows\r\nhead(SSRC_data)\r\n\r\n  age gender education_level physical_activity_level  bmi\r\n1  64   male          medium                     low 27.9\r\n2  59 female             low                  medium 27.5\r\n3  39 female            high                     low 27.4\r\n4  30 female            high                     low 24.2\r\n5  49   male          medium                     low 23.9\r\n6  37   male          medium                  medium 30.7\r\n\r\nTask 6\r\nInstall and load the tidyverse package.\r\n(If you have already installed the package before, loading the package is sufficient)\r\n\r\n\r\n# Install tidyverse package (if you have not done it yet)\r\n# install.packages(\"tidyverse\")\r\n\r\n# Load tidyverse package\r\nlibrary(\"tidyverse\")\r\n\r\n\r\nThe mutate() command\r\nTask 7\r\nCreate a new variable that contains the age of an individual in months. Call the variable age_in_months and add it to the SSRC dataset. Check out the first six rows of the dataset after creating this new variable.\r\n\r\n\r\n# Add variable to the SSRC dataset \r\nSSRC_data <- mutate(SSRC_data, age_in_months = 12*age)\r\n\r\n# Check out dataset\r\nhead(SSRC_data)\r\n\r\n  age gender education_level physical_activity_level  bmi\r\n1  64   male          medium                     low 27.9\r\n2  59 female             low                  medium 27.5\r\n3  39 female            high                     low 27.4\r\n4  30 female            high                     low 24.2\r\n5  49   male          medium                     low 23.9\r\n6  37   male          medium                  medium 30.7\r\n  age_in_months\r\n1           768\r\n2           708\r\n3           468\r\n4           360\r\n5           588\r\n6           444\r\n\r\nCheck variable types\r\nTask 8\r\nUse the str() command to check the variable types in the SSRC data.\r\n\r\n\r\n# Check variable types\r\nstr(SSRC_data)\r\n\r\n'data.frame':   1000 obs. of  6 variables:\r\n $ age                    : int  64 59 39 30 49 37 33 44 27 55 ...\r\n $ gender                 : chr  \"male\" \"female\" \"female\" \"female\" ...\r\n $ education_level        : chr  \"medium\" \"low\" \"high\" \"high\" ...\r\n $ physical_activity_level: chr  \"low\" \"medium\" \"low\" \"low\" ...\r\n $ bmi                    : num  27.9 27.5 27.4 24.2 23.9 30.7 25.1 30.3 18.5 30.2 ...\r\n $ age_in_months          : num  768 708 468 360 588 444 396 528 324 660 ...\r\n\r\nFactor and Indicator Variables\r\nTask 9\r\nTransform the variables gender, education_level and physical_activity_level into factor variables. Use the str() command to check out whether it worked.\r\n\r\n\r\n# Transform into factor variables (without dplyr)\r\nSSRC_data$gender <- as.factor(SSRC_data$gender)\r\nSSRC_data$education_level <- as.factor(SSRC_data$education_level)\r\nSSRC_data$physical_activity_level <- as.factor(SSRC_data$physical_activity_level)\r\n\r\n# Transform into factor variables (with dplyr)\r\nSSRC_data <- mutate(SSRC_data, gender = as.factor(gender),\r\n                               education_level = as.factor(education_level),\r\n                               physical_activity_level = as.factor(physical_activity_level))\r\n\r\n# Check whether it worked \r\nstr(SSRC_data)\r\n\r\n'data.frame':   1000 obs. of  6 variables:\r\n $ age                    : int  64 59 39 30 49 37 33 44 27 55 ...\r\n $ gender                 : Factor w/ 2 levels \"female\",\"male\": 2 1 1 1 2 2 2 2 1 1 ...\r\n $ education_level        : Factor w/ 3 levels \"high\",\"low\",\"medium\": 3 2 1 1 3 3 1 3 1 3 ...\r\n $ physical_activity_level: Factor w/ 3 levels \"high\",\"low\",\"medium\": 2 3 2 2 2 3 2 1 3 2 ...\r\n $ bmi                    : num  27.9 27.5 27.4 24.2 23.9 30.7 25.1 30.3 18.5 30.2 ...\r\n $ age_in_months          : num  768 708 468 360 588 444 396 528 324 660 ...\r\n\r\nTask 10\r\nCheck the level order of the variable physical_activity_level and adjust it if necessary to “low”, “medium,”high”.\r\n\r\n\r\n# Check level ordering\r\nlevels(SSRC_data$physical_activity_level)\r\n\r\n[1] \"high\"   \"low\"    \"medium\"\r\n\r\n# Change order (without forcats package from the tidyverse) \r\nSSRC_data$physical_activity_level <- factor(SSRC_data$physical_activity_level, \r\n                                            levels = c(\"low\", \"medium\", \"high\"))\r\n\r\n\r\n# Change order (with forcats package from the tidyverse) \r\nSSRC_data <- mutate(SSRC_data, physical_activity_level = fct_relevel(physical_activity_level, c(\"low\", \"medium\", \"high\")))\r\n\r\n# Check whether releveling worked\r\nlevels(SSRC_data$physical_activity_level)\r\n\r\n[1] \"low\"    \"medium\" \"high\"  \r\n\r\nTask 11\r\nUse the mutate() command to create a logical variable indicating whether an individual has a bmi larger than 25 and call this variable overweight_indicator. Check the class of the new variable using the class() and str() command.\r\n\r\n\r\n# Create overweight indicator\r\nSSRC_data <- mutate(SSRC_data, overweight_indicator = bmi > 25)\r\n\r\n# Check class of overweight indicator\r\nclass(SSRC_data$overweight_indicator)\r\n\r\n[1] \"logical\"\r\n\r\nstr(SSRC_data$overweight_indicator)\r\n\r\n logi [1:1000] TRUE TRUE TRUE FALSE FALSE TRUE ...\r\n\r\nTask 12\r\nChange the name of the variable gender into sex. Use the str() command to check whether it worked.\r\n\r\n\r\n# Rename variable\r\nSSRC_data <- rename(SSRC_data, sex = gender)\r\n\r\n# Check whether it worked\r\nstr(SSRC_data)\r\n\r\n'data.frame':   1000 obs. of  7 variables:\r\n $ age                    : int  64 59 39 30 49 37 33 44 27 55 ...\r\n $ sex                    : Factor w/ 2 levels \"female\",\"male\": 2 1 1 1 2 2 2 2 1 1 ...\r\n $ education_level        : Factor w/ 3 levels \"high\",\"low\",\"medium\": 3 2 1 1 3 3 1 3 1 3 ...\r\n $ physical_activity_level: Factor w/ 3 levels \"low\",\"medium\",..: 1 2 1 1 1 2 1 3 2 1 ...\r\n $ bmi                    : num  27.9 27.5 27.4 24.2 23.9 30.7 25.1 30.3 18.5 30.2 ...\r\n $ age_in_months          : num  768 708 468 360 588 444 396 528 324 660 ...\r\n $ overweight_indicator   : logi  TRUE TRUE TRUE FALSE FALSE TRUE ...\r\n\r\nTask 13\r\nCreate a new factor variable that indicates whether an individual is “underweight” (bmi < 18.5), “normal” (bmi between 18.5 and 25) or “overweight” (bmi > 25). Call this variable weight_category. Use the str() and head() command to check out whether it worked out.\r\n\r\n\r\n# Create weight_category variable\r\nSSRC_data <- SSRC_data %>% \r\n              mutate(weight_category = ifelse(bmi < 18.5, \"underweight\", \r\n                                              ifelse(bmi > 25, \"overweight\", \"normal\"))) %>% \r\n              mutate(weight_category = as_factor(weight_category))\r\n\r\n# There are many different ways to do this. This is only one of it. \r\n# Another useful command to create categorical varibles with multiple levels from a numerical variable is the cut() command.\r\n\r\n# Check whether it worked\r\nhead(SSRC_data)\r\n\r\n  age    sex education_level physical_activity_level  bmi\r\n1  64   male          medium                     low 27.9\r\n2  59 female             low                  medium 27.5\r\n3  39 female            high                     low 27.4\r\n4  30 female            high                     low 24.2\r\n5  49   male          medium                     low 23.9\r\n6  37   male          medium                  medium 30.7\r\n  age_in_months overweight_indicator weight_category\r\n1           768                 TRUE      overweight\r\n2           708                 TRUE      overweight\r\n3           468                 TRUE      overweight\r\n4           360                FALSE          normal\r\n5           588                FALSE          normal\r\n6           444                 TRUE      overweight\r\n\r\nstr(SSRC_data)\r\n\r\n'data.frame':   1000 obs. of  8 variables:\r\n $ age                    : int  64 59 39 30 49 37 33 44 27 55 ...\r\n $ sex                    : Factor w/ 2 levels \"female\",\"male\": 2 1 1 1 2 2 2 2 1 1 ...\r\n $ education_level        : Factor w/ 3 levels \"high\",\"low\",\"medium\": 3 2 1 1 3 3 1 3 1 3 ...\r\n $ physical_activity_level: Factor w/ 3 levels \"low\",\"medium\",..: 1 2 1 1 1 2 1 3 2 1 ...\r\n $ bmi                    : num  27.9 27.5 27.4 24.2 23.9 30.7 25.1 30.3 18.5 30.2 ...\r\n $ age_in_months          : num  768 708 468 360 588 444 396 528 324 660 ...\r\n $ overweight_indicator   : logi  TRUE TRUE TRUE FALSE FALSE TRUE ...\r\n $ weight_category        : Factor w/ 3 levels \"overweight\",\"normal\",..: 1 1 1 2 2 1 1 1 2 1 ...\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:58:48+02:00"
    },
    {
      "path": "C4_exercise.html",
      "title": "C4 - Exercise Sheet",
      "description": "Here you find the exercise sheet for chapter 4: \"Data Visualization\"\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGetting ready\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\nTask 7\r\nTask 8\r\n\r\nBar Charts\r\nTask 9\r\nTask 10\r\n\r\nHistograms\r\nTask 11\r\nTask 12\r\n\r\nDensity Plots\r\nTask 13\r\nTask 14\r\n\r\nBoxplots\r\nTask 15\r\n\r\nScatterplots\r\nTask 16\r\nTask 17\r\nTask 18\r\n\r\n\r\nGetting ready\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C4_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C4_template.R R Script.\r\nTask 4\r\nLoad the tidyverse package.\r\nTask 5\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\nTask 6\r\nGet a first impression of the dataset by checking out the dataset using the str() command.\r\nTask 7\r\nTransform the three character variables in the dataset into factor variables. Make sure that the levels of the physical_activity_level and education_level variables are ordered in a reasonable way. (You learned how to do that in chapter 3)\r\nTask 8\r\nWhat kind of plot would be useful to analyze the …\r\nthe variation of gender?\r\nthe variation of bmi?\r\nthe covariation of physical_activity and education_level?\r\nthe covariation of bmi and physical_activity_level?\r\nthe covariation of age and bmi?\r\nBar Charts\r\nTask 9\r\nUse a bar chart to analyze the distribution of the physical_activity_level variable.\r\nTask 10\r\nCreate the same bar chart as in Task 9 but with colored bars and a decreased bar-width of 0.5.\r\nHistograms\r\nTask 11\r\nCreate a histogram to analyze the distribution of the variable age.\r\nTask 12\r\nCreate the same histogram as in Task 11 but change the binwidth to 1.\r\nDensity Plots\r\nTask 13\r\nCreate a density plot to analyze the distribution of the variable bmi.\r\nTask 14\r\nCreate a plot that depicts the distributions of bmi for males and females in a single plot.\r\nBoxplots\r\nTask 15\r\nCreate a set of parallel boxplots to describe the relationship between education_level and bmi.\r\nScatterplots\r\nTask 16\r\nCreate a scatterplot to analyze the relationship between age and bmi.\r\nTask 17\r\nCreate the same scatterplot as in task 16 and add a line that approximates the relationship between age and bmi. (Use method = “lm”)\r\nTask 18\r\nCreate the same scatterplot as in task 17 and add three horizontal lines that indicate bmi levels of 18.5, 25 and 30.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:59:21+02:00"
    },
    {
      "path": "C4_instructions.html",
      "title": "C4 - Instructions",
      "description": "Instructions for chapter 4: \"Data Visualization\" \n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroduction\r\nGetting ready\r\nStep 1\r\nStep 2\r\nStep 3\r\nStep 4\r\nStep 5\r\n\r\nBar charts\r\nStep 6\r\nStep 7\r\n\r\nHistograms\r\nStep 8\r\nStep 9\r\n\r\nDenistiy Plots\r\nStep 10\r\n\r\nBoxplots\r\nStep 11\r\n\r\nScatterplots\r\nStep 12\r\nStep 13\r\nStep 14\r\nStep 15\r\n\r\nAdditional Resources\r\n\r\nIntroduction\r\nIn this chapter you will learn how to create plots with the ggplot2 package (part of the tidyverse).\r\nTo meet this chapter’s learning objectives, please complete the respective exercise sheet. The instructions below will guide you through the process of solving the exercise sheet.\r\nGetting ready\r\nStep 1\r\nBriefly check out the exercise sheet for chapter 4 to get an impression of what you need to learn/know to solve it.\r\nStep 2\r\nSolve Tasks 1-7 of the exercise sheet.\r\nStep 3\r\nWatch the following YouTube Video:\r\nAn Introduction to Data Visualization\r\nStep 4\r\nDo the “Exploratory Data Analysis” tutorial offered in the posit Cloud:\r\nExploratory Data Analysis\r\nStep 5\r\nSolve task 8 of the exercise sheet.\r\nBar charts\r\nStep 6\r\nDo the “Bar Charts” tutorial offered in the posit Cloud:\r\nBar Charts\r\nComment: It is sufficient if you focus on the subchapters “Bar Charts” and “Aesthetics”.\r\nStep 7\r\nSolve tasks 9-10 of the exercise sheet.\r\nHistograms\r\nStep 8\r\nDo the “Histograms” tutorial offered in the RStudio Cloud:\r\nHistograms\r\nComment: It is sufficient to focus on the subchapter “Histograms”.\r\nStep 9\r\nSolve tasks 11-12 of the exercise sheet.\r\nDenistiy Plots\r\nStep 10\r\nWatch the following Video:\r\nDensity Plots\r\nSolve tasks 13-14.\r\nBoxplots\r\nStep 11\r\nWatch the following Video:\r\nBoxplots\r\nSolve task 15.\r\nScatterplots\r\nStep 12\r\nWatch the following Video:\r\nScatter Plots\r\nSolve task 16.\r\nStep 13\r\nWatch the following Video:\r\nSmoother\r\nSolve task 17.\r\nStep 14\r\nWatch the following Video:\r\nDraw Lines\r\nSolve Task 18.\r\nStep 15\r\nCompare your solutions to the sample solution for exercise sheet 4.\r\nAdditional Resources\r\nCheat Sheet: Data Visualization -> Nice overview on how to make plots with ggplot2\r\nIf you want to make your graphs more beautiful and understandable (e.g add a title, change colours), the following resources are recommended:\r\nTutorial: Customize Plots\r\nGoogle!!!\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T10:59:42+02:00"
    },
    {
      "path": "C4_solution.html",
      "title": "C4 - Sample Solution",
      "description": "Here you find the sample solution for the exercise sheet of chapter 4\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGetting ready\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\nTask 7\r\nTask 8\r\n\r\nBar Charts\r\nTask 9\r\nTask 10\r\n\r\nHistograms\r\nTask 11\r\nTask 12\r\n\r\nDensity Plots\r\nTask 13\r\nTask 14\r\n\r\nBoxplots\r\nTask 15\r\n\r\nScatterplots\r\nTask 16\r\nTask 17\r\nTask 18\r\n\r\n\r\nGetting ready\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C4_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C4_template.R R Script.\r\nTask 4\r\nLoad the tidyverse package.\r\n\r\n\r\n# Load tidyverse package\r\nlibrary(\"tidyverse\")\r\n\r\n\r\nTask 5\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\n\r\n\r\n# Load the dataset\r\nSSRC_data <- read.csv(\"SSRC_data.csv\")\r\n\r\n\r\nTask 6\r\nGet a first impression of the dataset by checking out the dataset using the str() command.\r\n\r\n\r\n# Check out the dataset\r\nstr(SSRC_data)\r\n\r\n'data.frame':   1000 obs. of  5 variables:\r\n $ age                    : int  64 59 39 30 49 37 33 44 27 55 ...\r\n $ gender                 : chr  \"male\" \"female\" \"female\" \"female\" ...\r\n $ education_level        : chr  \"medium\" \"low\" \"high\" \"high\" ...\r\n $ physical_activity_level: chr  \"low\" \"medium\" \"low\" \"low\" ...\r\n $ bmi                    : num  27.9 27.5 27.4 24.2 23.9 30.7 25.1 30.3 18.5 30.2 ...\r\n\r\nTask 7\r\nTransform the three character variables in the dataset into factor variables. Make sure that the levels of the physical_activity_level and education_level variables are ordered in a reasonable way. (You learned how to do that in chapter 3)\r\n\r\n\r\n# Transform into factor variables \r\nSSRC_data <- mutate(SSRC_data, gender = as.factor(gender),\r\n                               education_level = as.factor(education_level),\r\n                               physical_activity_level = as.factor(physical_activity_level))\r\n\r\n# Order education_level and physical_activity_level in a reasonable way\r\nSSRC_data <- SSRC_data %>% \r\n              mutate(education_level = fct_relevel(education_level, c(\"low\", \"medium\", \"high\"))) %>% \r\n              mutate(physical_activity_level = fct_relevel(physical_activity_level, c(\"low\", \"medium\", \"high\")))\r\n\r\n# Check whether it worked out\r\nlevels(SSRC_data$education_level)\r\n\r\n[1] \"low\"    \"medium\" \"high\"  \r\n\r\nlevels(SSRC_data$physical_activity_level)\r\n\r\n[1] \"low\"    \"medium\" \"high\"  \r\n\r\nTask 8\r\nWhat kind of plot would be useful to analyze the …\r\nthe variation of gender?\r\nthe variation of bmi?\r\nthe covariation of physical_activity and education_level?\r\nthe covariation of bmi and physical_activity_level?\r\nthe covariation of age and bmi?\r\n\r\n\r\n# variation of gender -> Bar Chart\r\n\r\n# Variation of bmi -> Histogram\r\n\r\n# Covariation of physical_activity_level and education_level -> Heat Map\r\n\r\n# Covariation of bmi and physical_activity_level -> Boxplot\r\n\r\n# Covariation of age and bmi -> Scatterplot\r\n\r\n\r\nBar Charts\r\nTask 9\r\nUse a bar chart to analyze the distribution of the physical_activity_level variable.\r\n\r\n\r\n# Create bar chart\r\nggplot(data = SSRC_data) +\r\n  geom_bar(mapping = aes(x = physical_activity_level))\r\n\r\n\r\n\r\nAn alternative to putting the mapping argument in geom_bar() command is to put it in the ggplot() command in the first line:\r\n\r\n\r\n# Create bar chart\r\nggplot(data = SSRC_data, mapping = aes(x = physical_activity_level)) +\r\n  geom_bar()\r\n\r\n\r\n\r\nBoth alternatives work, but the later one is probably the approach that is more commonly used. Hence, we will also use the second approach whenever we create plots in the SSRC sample solutions.\r\nTask 10\r\nCreate the same bar chart as in Task 9 but with colored bars and a decreased bar-width of 0.5.\r\n\r\n\r\n# Create bar chart\r\nggplot(data = SSRC_data, mapping = aes(x = physical_activity_level, fill = physical_activity_level)) +\r\n  geom_bar( width = 0.5)\r\n\r\n\r\n\r\nHistograms\r\nTask 11\r\nCreate a histogram to analyze the distribution of the variable age.\r\n\r\n\r\n# Create histogram\r\nggplot(data = SSRC_data, mapping = aes(x = age)) +\r\n  geom_histogram()\r\n\r\n\r\n\r\nTask 12\r\nCreate the same histogram as in Task 11 but change the binwidth to 1.\r\n\r\n\r\n# Create histogram\r\nggplot(data = SSRC_data, mapping = aes(x = age)) +\r\n  geom_histogram( binwidth = 1)\r\n\r\n\r\n\r\nDensity Plots\r\nTask 13\r\nCreate a density plot to analyze the distribution of the variable bmi.\r\n\r\n\r\n# Create density plot\r\nggplot(data = SSRC_data, mapping = aes(x = bmi)) +\r\n  geom_density()\r\n\r\n\r\n\r\nTask 14\r\nCreate a plot that depicts the distributions of bmi for males and females in a single plot.\r\n\r\n\r\n# Create density plots\r\nggplot(data = SSRC_data, mapping = aes(x = bmi, col = gender)) +\r\n  geom_density()\r\n\r\n\r\n\r\nBoxplots\r\nTask 15\r\nCreate a set of parallel boxplots to describe the relationship between education_level and bmi.\r\n\r\n\r\n# Create boxplots\r\nggplot(data = SSRC_data, mapping = aes(x = education_level, y = bmi)) +\r\n  geom_boxplot()\r\n\r\n\r\n\r\nScatterplots\r\nTask 16\r\nCreate a scatterplot to analyze the relationship between age and bmi.\r\n\r\n\r\n# Create Scatterplot\r\nggplot(data = SSRC_data, mapping = aes(x = age, y = bmi)) +\r\n  geom_point()\r\n\r\n\r\n\r\nTask 17\r\nCreate the same scatterplot as in task 16 and add a line that approximates the relationship between age and bmi. (Use method = “lm”)\r\n\r\n\r\n# Create Scatterplot with a smoother\r\nggplot(data = SSRC_data, mapping = aes(x = age, y = bmi)) +\r\n  geom_point() +\r\n  geom_smooth(method = \"lm\")\r\n\r\n`geom_smooth()` using formula = 'y ~ x'\r\n\r\n\r\nTask 18\r\nCreate the same scatterplot as in task 17 and add three horizontal lines that indicate bmi levels of 18.5, 25 and 30.\r\n\r\n\r\n# Create Scatterplot with horizontal lines\r\nggplot(data = SSRC_data, mapping = aes(x = age, y = bmi)) +\r\n  geom_point() +\r\n  geom_hline(yintercept = c(18.5, 25, 30))\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:00:17+02:00"
    },
    {
      "path": "C5_exercise.html",
      "title": "C5 - Exercise Sheet",
      "description": "Here you find the exercise sheet for chapter 5: \"Regression Models\"\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGetting ready\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\nTask 7\r\n\r\nLinear Regression\r\nTask 8\r\nTask 9\r\n\r\nFitted Values and Residuals\r\nTask 10\r\nTask 11\r\nTask 12\r\n\r\nPrediction\r\nTask 13\r\nTask 14\r\n\r\nExtracting Coefficients\r\nTask 15\r\n\r\nLogistic Regression\r\nTask 16\r\nTask 17\r\nTask 18\r\n\r\n\r\nGetting ready\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C5_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C5_template.R R Script.\r\nTask 4\r\nLoad the tidyverse package.\r\nTask 5\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\nTask 6\r\nGet a first impression of the dataset by checking out the dataset using the str() command.\r\nTask 7\r\nTransform the three categorical variables in the dataset into factor variables. Make sure that the levels of the physical_activity_level and education_level variables are ordered in a reasonable way. (You learned how to do that in chapter 2)\r\nLinear Regression\r\nTask 8\r\nAnalyze the relationship between age and bmi by fitting a linear regression model with the variable bmi as dependent variable and age as independent variable. Call this model lm_mod_restricted. Use the summary() command to check out the results.\r\nTask 9\r\nEstimate a linear regression model with bmi as dependent variable and all other variables in the SSRC data set as independent variables. Call this model lm_mod_full. Use the summary() command to check out the results.\r\nFitted Values and Residuals\r\nTask 10\r\nUse the lm_mod_full model you just fitted in task 9 to add the fitted bmi values to the SSRC dataset. Call this new variable bmi_fitted. Use the str() command to check out whether it worked.\r\nTask 11\r\nCalculate the residuals by substracting the fitted values from the true observed bmi values and add this residuals variable to the SSRC dataset. Check out whether it worked.\r\nTask 12\r\nAnalyze the distribution of the residuals variable you created in task 11 with a histogram and a density plot.\r\nPrediction\r\nTask 13\r\nCreate a data frame with two observations and the four variables: age, gender, education_level and physical_activity_level. The first observation is a female person of age 28 who features both a high level of education and a high level of physical activity. The second observation is a male person of age 59 who features a medium level of education and a low level of physical activity. Call this data frame SSRC_data_new.\r\nTask 14\r\nUse the lm_mod_full model to predict the bmi for the two new observations described in Task 13.\r\nExtracting Coefficients\r\nTask 15\r\nExtract the beta coefficients for the age variable from the lm_mod_full and the lm_mod_restricted model objects. Combine them in data frame that displays the two age coefficients nicely next to each other and where the columns are called full_model and restricted_model. Call this data frame age_coefficients and check it out after creating it.\r\nLogistic Regression\r\nTask 16\r\nCreate an indicator variable that equals one if the bmi of a person is larger or equal to 30 and zero otherwise. Add this variable to the SSRC dataset and call it obesity. (You can use the mutate() command in combination with the ifelse() command to do this in one line of code)\r\nTask 17\r\nFit a logistic regression model with the obesity variable as dependent variable and age, gender, education_level and physical_activity_level as independent variables. Call this model logit_mod. Use the summary() command to check out the results.\r\nTask 18\r\nPredict the probability that the two new observations described in Task 13 are obese. You can reuse the SSRC_data_new dataframe. You can also use the type option of the predict() command to get the predicted probabilities directly. Just set type equal to “response”.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:00:41+02:00"
    },
    {
      "path": "C5_instructions.html",
      "title": "C5 - Instructions",
      "description": "Instructions for chapter 5: \"Regression Models\" \n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroduction\r\nGetting ready\r\nStep 1\r\nStep 2\r\n\r\nLinear Regression\r\nStep 3\r\nStep 4\r\nStep 5\r\nStep 6\r\n\r\nFitted Values and Residuals\r\nStep 7\r\n\r\nPrediction\r\nStep 8\r\n\r\nExtracting Coefficients\r\nStep 9\r\n\r\nLogistic Regression\r\nStep 10\r\nStep 11\r\nStep 12\r\nStep 13\r\n\r\n\r\nIntroduction\r\nIn this chapter you will learn how to and how to work with their results\r\nFit regression models in R\r\nwork with regression model results in R\r\nTo meet this chapter’s learning objectives, please complete the respective exercise sheet. The instructions below will guide you through the process of solving the exercise sheet.\r\nGetting ready\r\nStep 1\r\nBriefly check out the exercise sheet for chapter 5 to get an impression of what you need to learn/know to solve it.\r\nStep 2\r\nSolve task 1-7 of the exercise sheet.\r\nComment: Tasks 4-7 are identical to tasks 4-7 from the Chapter 4 exercise sheet. To save time, you could copy and paste from the respective solution.\r\nLinear Regression\r\nStep 3\r\nWatch the following Video:\r\nSimple Linear Regression\r\nComment: In our opinion, the video describes the basic idea behind linear regression models pretty good. If you are familiar with linear regression models, you can also skip this video. Those who have struggled with understanding linear regression models in the past might benefit from watching this video, though.\r\nStep 4\r\nRead subchapter 15.1 from “YaRrr! The Pirate’s Guide to R”:\r\nThe Linear Model\r\nStep 5\r\nRead subchapters 15.2 and 15.2.1 from “YaRrr! The Pirate’s Guide to R”:\r\nEstimation with lm()\r\nStep 6\r\nSolve tasks 8-9 of the exercise sheet.\r\nFitted Values and Residuals\r\nStep 7\r\nRead subchapter 15.2.2 from “YaRrr! The Pirate’s Guide to R”:\r\nGetting Model Fits\r\nSolve tasks 10-12 of the exercise sheet.\r\nPrediction\r\nStep 8\r\nRead subchapters 15.2.3 from “YaRrr! The Pirate’s Guide to R”:\r\nPrediction\r\nSolve tasks 13-14 of the exercise sheet.\r\nExtracting Coefficients\r\nStep 9\r\nWatch the following Video:\r\nExtract Regression Coefficients\r\nSolve task 15 of the exercise sheet.\r\nLogistic Regression\r\nStep 10\r\nWatch the following Video:\r\nIntroduction to Logistic Regression\r\nComment: This video describes the rational behind logistic regression. If you are already familiar with this topic, you can save time by skipping. For everybody who has doubts regarding their logistic regression skills this video might be very helpful.\r\nStep 11\r\nRead subchapters 15.4 and 15.5 from “YaRrr! The Pirate’s Guide to R”:\r\nLogistic Regression\r\nComment: In subchapter 15.5, only the first part about logistic regression is relevant.\r\nStep 12\r\nSolve Task 16-18 of the exercise sheet.\r\nStep 13\r\nCompare your solutions to the sample solution for exercise sheet 5.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:01:02+02:00"
    },
    {
      "path": "C5_solution.html",
      "title": "C5 - Sample Solution",
      "description": "Here you find the sample solution for the exercise sheet of chapter 5\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGetting ready\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\nTask 7\r\n\r\nLinear Regression\r\nTask 8\r\nTask 9\r\n\r\nFitted Values and Residuals\r\nTask 10\r\nTask 11\r\nTask 12\r\n\r\nPrediction\r\nTask 13\r\nTask 14\r\n\r\nExtracting Coefficients\r\nTask 15\r\n\r\nLogistic Regression\r\nTask 16\r\nTask 17\r\nTask 18\r\n\r\n\r\nGetting ready\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C5_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C5_template.R R Script.\r\nTask 4\r\nLoad the tidyverse package.\r\n\r\n\r\n# Load tidyverse package\r\nlibrary(\"tidyverse\")\r\n\r\n\r\nTask 5\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\n\r\n\r\n# Load the dataset\r\nSSRC_data <- read.csv(\"SSRC_data.csv\")\r\n\r\n\r\nTask 6\r\nGet a first impression of the dataset by checking out the dataset using the str() command.\r\n\r\n\r\n# Check out the dataset\r\nstr(SSRC_data)\r\n\r\n'data.frame':   1000 obs. of  5 variables:\r\n $ age                    : int  64 59 39 30 49 37 33 44 27 55 ...\r\n $ gender                 : chr  \"male\" \"female\" \"female\" \"female\" ...\r\n $ education_level        : chr  \"medium\" \"low\" \"high\" \"high\" ...\r\n $ physical_activity_level: chr  \"low\" \"medium\" \"low\" \"low\" ...\r\n $ bmi                    : num  27.9 27.5 27.4 24.2 23.9 30.7 25.1 30.3 18.5 30.2 ...\r\n\r\nTask 7\r\nTransform the three categorical variables in the dataset into factor variables. Make sure that the levels of the physical_activity_level and education_level variables are ordered in a reasonable way. (You learned how to do that in chapter 2)\r\n\r\n\r\n# Transform into factor variables \r\nSSRC_data <- mutate(SSRC_data, gender = as.factor(gender),\r\n                               education_level = as.factor(education_level),\r\n                               physical_activity_level = as.factor(physical_activity_level))\r\n\r\n# Order education_level and physical_activity_level in a reasonable way\r\nSSRC_data <- SSRC_data %>% \r\n              mutate(education_level = fct_relevel(education_level, c(\"low\", \"medium\", \"high\"))) %>% \r\n              mutate(physical_activity_level = fct_relevel(physical_activity_level, c(\"low\", \"medium\", \"high\")))\r\n\r\n# Check whether it worked out\r\nlevels(SSRC_data$education_level)\r\n\r\n[1] \"low\"    \"medium\" \"high\"  \r\n\r\nlevels(SSRC_data$physical_activity_level)\r\n\r\n[1] \"low\"    \"medium\" \"high\"  \r\n\r\nLinear Regression\r\nTask 8\r\nAnalyze the relationship between age and bmi by fitting a linear regression model with the variable bmi as dependent variable and age as independent variable. Call this model lm_mod_restricted. Use the summary() command to check out the results.\r\n\r\n\r\n# Estimate the model\r\nlm_mod_restricted <- lm(bmi ~ age , data = SSRC_data)\r\n\r\n# Check out model results\r\nsummary(lm_mod_restricted) \r\n\r\n\r\nCall:\r\nlm(formula = bmi ~ age, data = SSRC_data)\r\n\r\nResiduals:\r\n     Min       1Q   Median       3Q      Max \r\n-10.5254  -2.8796  -0.4681   2.1459  28.2083 \r\n\r\nCoefficients:\r\n            Estimate Std. Error t value Pr(>|t|)    \r\n(Intercept) 21.66782    0.50240   43.13   <2e-16 ***\r\nage          0.10675    0.01013   10.54   <2e-16 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nResidual standard error: 4.338 on 998 degrees of freedom\r\nMultiple R-squared:  0.1002,    Adjusted R-squared:  0.09931 \r\nF-statistic: 111.1 on 1 and 998 DF,  p-value: < 2.2e-16\r\n\r\nTask 9\r\nEstimate a linear regression model with bmi as dependent variable and all other variables in the SSRC data set as independent variables. Call this model lm_mod_full. Use the summary() command to check out the results.\r\n\r\n\r\n# Estimate the model\r\nlm_mod_full <- lm(bmi ~ age + gender + education_level + physical_activity_level, data = SSRC_data)\r\n\r\n# Check out model results\r\nsummary(lm_mod_full) \r\n\r\n\r\nCall:\r\nlm(formula = bmi ~ age + gender + education_level + physical_activity_level, \r\n    data = SSRC_data)\r\n\r\nResiduals:\r\n     Min       1Q   Median       3Q      Max \r\n-12.0180  -2.6923  -0.5798   2.0490  28.4287 \r\n\r\nCoefficients:\r\n                              Estimate Std. Error t value Pr(>|t|)\r\n(Intercept)                   23.05859    0.65008  35.470  < 2e-16\r\nage                            0.09195    0.01043   8.820  < 2e-16\r\ngendermale                     0.88613    0.27589   3.212  0.00136\r\neducation_levelmedium         -0.81952    0.37033  -2.213  0.02713\r\neducation_levelhigh           -1.78693    0.40766  -4.383 1.29e-05\r\nphysical_activity_levelmedium -0.56293    0.33108  -1.700  0.08939\r\nphysical_activity_levelhigh   -0.22907    0.37725  -0.607  0.54385\r\n                                 \r\n(Intercept)                   ***\r\nage                           ***\r\ngendermale                    ** \r\neducation_levelmedium         *  \r\neducation_levelhigh           ***\r\nphysical_activity_levelmedium .  \r\nphysical_activity_levelhigh      \r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nResidual standard error: 4.283 on 993 degrees of freedom\r\nMultiple R-squared:  0.1271,    Adjusted R-squared:  0.1218 \r\nF-statistic:  24.1 on 6 and 993 DF,  p-value: < 2.2e-16\r\n\r\nFitted Values and Residuals\r\nTask 10\r\nUse the lm_mod_full model you just fitted in task 9 to add the fitted bmi values to the SSRC dataset. Call this new variable bmi_fitted. Use the str() command to check out whether it worked.\r\n\r\n\r\n# Add fitted bmi values to SSRC dataset\r\nSSRC_data$bmi_fitted <- lm_mod_full$fitted.values\r\n\r\n# Check out whether it worked\r\nstr(SSRC_data)\r\n\r\n'data.frame':   1000 obs. of  6 variables:\r\n $ age                    : int  64 59 39 30 49 37 33 44 27 55 ...\r\n $ gender                 : Factor w/ 2 levels \"female\",\"male\": 2 1 1 1 2 2 2 2 1 1 ...\r\n $ education_level        : Factor w/ 3 levels \"low\",\"medium\",..: 2 1 3 3 2 2 3 2 3 2 ...\r\n $ physical_activity_level: Factor w/ 3 levels \"low\",\"medium\",..: 1 2 1 1 1 2 1 3 2 1 ...\r\n $ bmi                    : num  27.9 27.5 27.4 24.2 23.9 30.7 25.1 30.3 18.5 30.2 ...\r\n $ bmi_fitted             : num  29 27.9 24.9 24 27.6 ...\r\n\r\nTask 11\r\nCalculate the residuals by substracting the fitted values from the true observed bmi values and add this residuals variable to the SSRC dataset. Check out whether it worked.\r\n\r\n\r\n# Calculate residuals\r\nSSRC_data <- mutate(SSRC_data, residuals = bmi - bmi_fitted)\r\n\r\n# Check out whether it worked\r\nstr(SSRC_data)\r\n\r\n'data.frame':   1000 obs. of  7 variables:\r\n $ age                    : int  64 59 39 30 49 37 33 44 27 55 ...\r\n $ gender                 : Factor w/ 2 levels \"female\",\"male\": 2 1 1 1 2 2 2 2 1 1 ...\r\n $ education_level        : Factor w/ 3 levels \"low\",\"medium\",..: 2 1 3 3 2 2 3 2 3 2 ...\r\n $ physical_activity_level: Factor w/ 3 levels \"low\",\"medium\",..: 1 2 1 1 1 2 1 3 2 1 ...\r\n $ bmi                    : num  27.9 27.5 27.4 24.2 23.9 30.7 25.1 30.3 18.5 30.2 ...\r\n $ bmi_fitted             : num  29 27.9 24.9 24 27.6 ...\r\n $ residuals              : num  -1.11 -0.421 2.542 0.17 -3.731 ...\r\n\r\nTask 12\r\nAnalyze the distribution of the residuals variable you created in task 11 with a histogram and a density plot.\r\n\r\n\r\n# Histogram\r\nggplot(data = SSRC_data) +\r\n  geom_histogram(mapping = aes(x = residuals))\r\n\r\n\r\n# Density Plot\r\nggplot(data = SSRC_data) +\r\n  geom_density(mapping = aes(x = residuals))\r\n\r\n\r\n\r\nPrediction\r\nTask 13\r\nCreate a data frame with two observations and the four variables: age, gender, education_level and physical_activity_level. The first observation is a female person of age 28 who features both a high level of education and a high level of physical activity. The second observation is a male person of age 59 who features a medium level of education and a low level of physical activity. Call this data frame SSRC_data_new.\r\n\r\n\r\n# Create data frame \r\nSSRC_data_new <- data.frame(age = c(28, 59),\r\n                            gender = c(\"female\", \"male\"),\r\n                            education_level = c(\"high\", \"medium\"),\r\n                            physical_activity_level = c(\"high\", \"low\"))\r\n\r\n\r\nTask 14\r\nUse the lm_mod_full model to predict the bmi for the two new observations described in Task 13.\r\n\r\n\r\n# Predict bmi for new observations\r\npredict(object = lm_mod_full,\r\n        newdata = SSRC_data_new)\r\n\r\n       1        2 \r\n23.61717 28.55019 \r\n\r\nExtracting Coefficients\r\nTask 15\r\nExtract the beta coefficients for the age variable from the lm_mod_full and the lm_mod_restricted model objects. Combine them in data frame that displays the two age coefficients nicely next to each other and where the columns are called full_model and restricted_model. Call this data frame age_coefficients and check it out after creating it.\r\n\r\n\r\n# Extract coefficient from the full model\r\nmatrix_coef_full <- summary(lm_mod_full)$coefficients\r\nage_coef_full <- matrix_coef_full[2,1]\r\n\r\n# Extract coefficient from the restricted model\r\nmatrix_coef_restricted <- summary(lm_mod_restricted)$coefficients\r\nage_coef_restricted <- matrix_coef_restricted[2,1]\r\n\r\n# Create data frame\r\nage_coefficients <- data.frame(full_model = c(age_coef_full),\r\n                               restricted_model = c(age_coef_restricted))\r\n\r\n# Check out the created data frame\r\nage_coefficients\r\n\r\n  full_model restricted_model\r\n1 0.09194905        0.1067474\r\n\r\nLogistic Regression\r\nTask 16\r\nCreate an indicator variable that equals one if the bmi of a person is larger or equal to 30 and zero otherwise. Add this variable to the SSRC dataset and call it obesity. (You can use the mutate() command in combination with the ifelse() command to do this in one line of code)\r\n\r\n\r\n# Create obesity indicator\r\nSSRC_data <- mutate(SSRC_data, obesity = ifelse(bmi >= 30, 1, 0))\r\n\r\n\r\nTask 17\r\nFit a logistic regression model with the obesity variable as dependent variable and age, gender, education_level and physical_activity_level as independent variables. Call this model logit_mod. Use the summary() command to check out the results.\r\n\r\n\r\n# Fit logistic regression model\r\nlogit_mod <- glm(obesity ~ age  + gender + education_level + physical_activity_level, \r\n                 data = SSRC_data, \r\n                 family = binomial)\r\n\r\n# Check out the results\r\nsummary(logit_mod)\r\n\r\n\r\nCall:\r\nglm(formula = obesity ~ age + gender + education_level + physical_activity_level, \r\n    family = binomial, data = SSRC_data)\r\n\r\nDeviance Residuals: \r\n    Min       1Q   Median       3Q      Max  \r\n-1.0486  -0.7194  -0.5695  -0.4182   2.2982  \r\n\r\nCoefficients:\r\n                               Estimate Std. Error z value Pr(>|z|)\r\n(Intercept)                   -2.459804   0.393658  -6.249 4.14e-10\r\nage                            0.029040   0.006326   4.591 4.42e-06\r\ngendermale                    -0.005055   0.164956  -0.031  0.97555\r\neducation_levelmedium         -0.189523   0.201150  -0.942  0.34609\r\neducation_levelhigh           -0.700715   0.243259  -2.881  0.00397\r\nphysical_activity_levelmedium -0.178425   0.203634  -0.876  0.38092\r\nphysical_activity_levelhigh   -0.161307   0.233540  -0.691  0.48975\r\n                                 \r\n(Intercept)                   ***\r\nage                           ***\r\ngendermale                       \r\neducation_levelmedium            \r\neducation_levelhigh           ** \r\nphysical_activity_levelmedium    \r\nphysical_activity_levelhigh      \r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\n(Dispersion parameter for binomial family taken to be 1)\r\n\r\n    Null deviance: 1006.3  on 999  degrees of freedom\r\nResidual deviance:  962.4  on 993  degrees of freedom\r\nAIC: 976.4\r\n\r\nNumber of Fisher Scoring iterations: 4\r\n\r\nTask 18\r\nPredict the probability that the two new observations described in Task 13 are obese. You can reuse the SSRC_data_new dataframe. You can also use the type option of the predict() command to get the predicted probabilities directly. Just set type equal to “response”.\r\n\r\n\r\n# Calculate the obesity probability for the two new observations\r\npredict(object = logit_mod,\r\n        newdata = SSRC_data_new,\r\n        type = \"response\")\r\n\r\n         1          2 \r\n0.07525069 0.28069762 \r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:01:29+02:00"
    },
    {
      "path": "C6_exercise.html",
      "title": "C6 - Exercise Sheet",
      "description": "Here you find the exercise sheet for chapter 6: \"Functions and Loops\"\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGetting ready\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\nTask 7\r\n\r\nFunctions\r\nTask 8\r\nTask 9\r\nTask 10\r\nTask 11\r\nTask 12\r\nTask 13\r\n\r\nLoops\r\nTask 14\r\nTask 15\r\nTask 16\r\n\r\nBootstrap\r\nTask 17\r\nTask 18\r\nTask 19\r\nTask 20\r\nTask 21\r\nTask 22\r\n\r\n\r\nGetting ready\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C6_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C6_template.R R Script.\r\nTask 4\r\nLoad the tidyverse package.\r\nTask 5\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\nTask 6\r\nGet a first impression of the dataset by checking out the dataset using the str() command.\r\nTask 7\r\nTransform the three categorical variables in the dataset into factor variables. Make sure that the levels of the physical_activity_level and education_level variables are ordered in a reasonable way.\r\nFunctions\r\nTask 8\r\nEstimate a linear regression model with bmi as dependent variable and all other variables in the SSRC data set as independent variables. Call this model lm_mod.\r\nTask 9\r\nCreate a data frame with one observation including the four variables: age, gender, education_level and physical_activity_level. The observation is a female person of age 45 who features a medium level of education and a medium level of physical activity. Call this data frame SSRC_data_new.\r\nTask 10\r\nUse the lm_mod model to predict the bmi for the new observation described in Task 9.\r\nTask 11\r\nBuild a function that enables a convenient bmi prediction for a particular set of covariables.\r\nThe prediction should be based on the same model that you estimated in Task 8.\r\nArguments of the function should be a data frame called data_input (default: SSRC_data) and the four variables age_input (default: 45), gender_input (default:“female”), education_input (default: “medium”) and physical_input (default = “medium”).\r\nCall the function bmi_pred_funct.\r\nTask 12\r\nRun the bmi_pred_funct function with its default values.\r\nTask 13\r\nUse the bmi_pred_funct function to predict the bmi of a male person of age 59 who features a low level of education and a low level of physical activity.\r\nLoops\r\nTask 14\r\nUse the bmi_pred_funct to predict the bmi for 5 female persons that are 20, 30, 40, 50 and 60 years old. All of them feature a medium education level and a medium physical activity level.\r\nTask 15\r\nDo the exact same thing as in Task 14 but this time you should use a for loop to do so.\r\nTask 16\r\nDo the exact same thing as in Task 15 but this time you save the results of each iteration in a vector called bmi_predictions. Check out the content of this vector after creating it.\r\nBootstrap\r\nIn the following tasks we always focus on the bmi prediction for a person that features the default values of our bmi_pred_funct function. We call such a person “default person”.\r\nTask 17\r\nUse our bmi_pred_funct function to check out the prediction for our default person.\r\nTask 18\r\nUse the sample_n() command from the dplyr package to draw a random sample (n = 1000) with replacement from our original SSRC dataset. Call this sample SSRC_data_bootstrap.\r\nTask 19\r\nApply bmi_pred_funct to the SSRC_data_bootstrap dataset to predict the bmi of our default person.\r\nTask 20\r\nUse a for loop to repeat what you did in tasks 18/19 1000 times. Store the results in a vector called bmi_pred_boot. Check out the bmi_pred_boot vector.\r\nTask 21\r\nCreate a histogram to analyse the distribution of bmi_pred_boot vector. (Just use hist() from the base R package)\r\nTask 22\r\nCalculate the mean, standard deviation and the 0.025 and 0.975 quantiles for the bmi_pred_boot vector.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:02:07+02:00"
    },
    {
      "path": "C6_instructions.html",
      "title": "C6 - Instructions",
      "description": "Instructions for chapter 6: \"Functions and Loops\" \n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroduction\r\nGetting ready\r\nStep 1\r\nStep 2\r\n\r\nFunctions\r\nStep 3\r\nStep 4\r\n\r\nLoops\r\nStep 5\r\n\r\nBootstrap\r\nStep 6\r\nStep 7\r\nStep 8\r\n\r\n\r\nIntroduction\r\nIn this chapter you will learn how to\r\nBuild your own customized functions\r\nUse Loops\r\nApply the bootstrap method\r\nTo meet this chapter’s learning objectives, please complete the respective exercise sheet. The instructions below will guide you through the process of solving the exercise sheet.\r\nGetting ready\r\nStep 1\r\nBriefly check out the exercise sheet for chapter 6 to get an impression of what you need to learn/know to solve it.\r\nStep 2\r\nSolve task 1-7 of the exercise sheet.\r\nComment: Tasks 4-7 are identical to tasks 4-7 from the Chapter 4 and 5 exercise sheets. To save time, you could copy and paste from the respective solution.\r\nFunctions\r\nStep 3\r\nDo the following posit Cloud tutorials:\r\nFunction Basics\r\nHow to Write a Function\r\nArguments\r\nEnvironments and Scoping Rules\r\nComment: It is not important that you understand every single technical detail in these tutorials, but we think that they are a convenient way to learn the most important things and aspects about writing your own functions in R.\r\nStep 4\r\nSolve tasks 8-13 of the exercise sheet.\r\nComment: Many of the things you need to solve these tasks were taught in chapter 5 of the SSRC.\r\nLoops\r\nStep 5\r\nWatch the following video: For Loops\r\nSolve tasks 14-16 of the exercise sheet.\r\nBootstrap\r\nStep 6\r\nWatch the following video: Bootstrap Basics\r\nStep 7\r\nSolve tasks 17-22 of the exercise sheet.\r\nStep 8\r\nCompare your solutions to the sample solution for exercise sheet 6.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:02:29+02:00"
    },
    {
      "path": "C6_solution.html",
      "title": "C6 - Sample Solution",
      "description": "Here you find the sample solution for the exercise sheet of chapter 6\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGetting ready\r\nTask 1\r\nTask 2\r\nTask 3\r\nTask 4\r\nTask 5\r\nTask 6\r\nTask 7\r\n\r\nFunctions\r\nTask 8\r\nTask 9\r\nTask 10\r\nTask 11\r\nTask 12\r\nTask 13\r\n\r\nLoops\r\nTask 14\r\nTask 15\r\nTask 16\r\n\r\nBootstrap\r\nTask 17\r\nTask 18\r\nTask 19\r\nTask 20\r\nTask 21\r\nTask 22\r\n\r\n\r\nGetting ready\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the R script SSRC_C5_template.R and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C6_template.R R Script.\r\nTask 4\r\nLoad the tidyverse package.\r\n\r\n\r\n# Load tidyverse package\r\nlibrary(\"tidyverse\")\r\n\r\n\r\nTask 5\r\nUse the read.csv() command to load the SSRC data into R and call the respective data object SSRC_data.\r\n\r\n\r\n# Load the dataset\r\nSSRC_data <- read.csv(\"SSRC_data.csv\")\r\n\r\n\r\nTask 6\r\nGet a first impression of the dataset by checking out the dataset using the str() command.\r\n\r\n\r\n# Check out the dataset\r\nstr(SSRC_data)\r\n\r\n'data.frame':   1000 obs. of  5 variables:\r\n $ age                    : int  64 59 39 30 49 37 33 44 27 55 ...\r\n $ gender                 : chr  \"male\" \"female\" \"female\" \"female\" ...\r\n $ education_level        : chr  \"medium\" \"low\" \"high\" \"high\" ...\r\n $ physical_activity_level: chr  \"low\" \"medium\" \"low\" \"low\" ...\r\n $ bmi                    : num  27.9 27.5 27.4 24.2 23.9 30.7 25.1 30.3 18.5 30.2 ...\r\n\r\nTask 7\r\nTransform the three categorical variables in the dataset into factor variables. Make sure that the levels of the physical_activity_level and education_level variables are ordered in a reasonable way.\r\n\r\n\r\n# Transform into factor variables \r\nSSRC_data <- mutate(SSRC_data, gender = as.factor(gender),\r\n                               education_level = as.factor(education_level),\r\n                               physical_activity_level = as.factor(physical_activity_level))\r\n\r\n# Order education_level and physical_activity_level in a reasonable way\r\nSSRC_data <- SSRC_data %>% \r\n              mutate(education_level = fct_relevel(education_level, c(\"low\", \"medium\", \"high\"))) %>% \r\n              mutate(physical_activity_level = fct_relevel(physical_activity_level, c(\"low\", \"medium\", \"high\")))\r\n\r\n# Check whether it worked out\r\nlevels(SSRC_data$education_level)\r\n\r\n[1] \"low\"    \"medium\" \"high\"  \r\n\r\nlevels(SSRC_data$physical_activity_level)\r\n\r\n[1] \"low\"    \"medium\" \"high\"  \r\n\r\nFunctions\r\nTask 8\r\nEstimate a linear regression model with bmi as dependent variable and all other variables in the SSRC data set as independent variables. Call this model lm_mod.\r\n\r\n\r\n# Estimate the model\r\nlm_mod <- lm(bmi ~ age + gender + education_level + physical_activity_level, data = SSRC_data)\r\n\r\n\r\nTask 9\r\nCreate a data frame with one observation including the four variables: age, gender, education_level and physical_activity_level. The observation is a female person of age 45 who features a medium level of education and a medium level of physical activity. Call this data frame SSRC_data_new.\r\n\r\n\r\n# Create data frame \r\nSSRC_data_new <- data.frame(age = c(45),\r\n                            gender = c(\"female\"),\r\n                            education_level = c(\"medium\"),\r\n                            physical_activity_level = c(\"medium\"))\r\n\r\n\r\nTask 10\r\nUse the lm_mod model to predict the bmi for the new observation described in Task 9.\r\n\r\n\r\n# Predict bmi for new observation\r\npredict(object = lm_mod,\r\n        newdata = SSRC_data_new)\r\n\r\n       1 \r\n25.81384 \r\n\r\nTask 11\r\nBuild a function that enables a convenient bmi prediction for a particular set of covariables.\r\nThe prediction should be based on the same model that you estimated in Task 8.\r\nArguments of the function should be a data frame called data_input (default: SSRC_data) and the four variables age_input (default: 45), gender_input (default:“female”), education_input (default: “medium”) and physical_input (default = “medium”).\r\nCall the function bmi_pred_funct.\r\n\r\n\r\n# Build the function\r\nbmi_pred_funct <- function(data_input = SSRC_data, \r\n                           age_input = 45, \r\n                           gender_input = \"female\", \r\n                           education_input = \"medium\", \r\n                           physical_input = \"medium\"){\r\n                    \r\n                    # Estimate model\r\n                    lm_mod <- lm(bmi ~ age + gender + education_level + physical_activity_level, \r\n                                 data = data_input)\r\n                    \r\n                    # Set up data frame with new data\r\n                    SSRC_data_new <- data.frame(age = c(age_input),\r\n                                                gender = c(gender_input),\r\n                                                education_level = c(education_input),\r\n                                                physical_activity_level = c(physical_input))\r\n                    \r\n                    # Predict bmi for the new data\r\n                    bmi_prediction <- predict(object = lm_mod,\r\n                                      newdata = SSRC_data_new)\r\n                    \r\n                    # Return the prediction\r\n                    return(bmi_prediction)\r\n  \r\n}\r\n\r\n\r\nTask 12\r\nRun the bmi_pred_funct function with its default values.\r\n\r\n\r\n# Run the function \r\nbmi_pred_funct()\r\n\r\n       1 \r\n25.81384 \r\n\r\nTask 13\r\nUse the bmi_pred_funct function to predict the bmi of a male person of age 59 who features a low level of education and a low level of physical activity.\r\n\r\n\r\n# Run the function\r\nbmi_pred_funct(data_input = SSRC_data, \r\n               age_input = 59, \r\n               gender_input = \"male\", \r\n               education_input = \"low\", \r\n               physical_input = \"low\")\r\n\r\n       1 \r\n29.36972 \r\n\r\nLoops\r\nTask 14\r\nUse the bmi_pred_funct to predict the bmi for 5 female persons that are 20, 30, 40, 50 and 60 years old. All of them feature a medium education level and a medium physical activity level.\r\n\r\n\r\n# Age 20\r\nbmi_pred_funct(data_input = SSRC_data, \r\n               age_input = 20, \r\n               gender_input = \"female\", \r\n               education_input = \"medium\", \r\n               physical_input = \"medium\")\r\n\r\n       1 \r\n23.51512 \r\n\r\n# Age 30\r\nbmi_pred_funct(data_input = SSRC_data, \r\n               age_input = 30, \r\n               gender_input = \"female\", \r\n               education_input = \"medium\", \r\n               physical_input = \"medium\")\r\n\r\n       1 \r\n24.43461 \r\n\r\n# Age 40\r\nbmi_pred_funct(data_input = SSRC_data, \r\n               age_input = 40, \r\n               gender_input = \"female\", \r\n               education_input = \"medium\", \r\n               physical_input = \"medium\")\r\n\r\n      1 \r\n25.3541 \r\n\r\n# Age 50\r\nbmi_pred_funct(data_input = SSRC_data, \r\n               age_input = 50, \r\n               gender_input = \"female\", \r\n               education_input = \"medium\", \r\n               physical_input = \"medium\")\r\n\r\n       1 \r\n26.27359 \r\n\r\n# Age 60\r\nbmi_pred_funct(data_input = SSRC_data, \r\n               age_input = 60, \r\n               gender_input = \"female\", \r\n               education_input = \"medium\", \r\n               physical_input = \"medium\")\r\n\r\n       1 \r\n27.19308 \r\n\r\nTask 15\r\nDo the exact same thing as in Task 14 but this time you should use a for loop to do so.\r\n\r\n\r\n# Create age vector\r\nage_vector <- c(20, 30, 40, 50, 60)\r\n\r\n# Use for loop to make bmi predictions for each age in the age vector\r\n\r\nfor (i in 1:length(age_vector)){\r\n   print(\r\n          bmi_pred_funct(data_input = SSRC_data, \r\n                    age_input = age_vector[i], \r\n                    gender_input = \"female\", \r\n                    education_input = \"medium\", \r\n                    physical_input = \"medium\")\r\n        )\r\n\r\n}\r\n\r\n       1 \r\n23.51512 \r\n       1 \r\n24.43461 \r\n      1 \r\n25.3541 \r\n       1 \r\n26.27359 \r\n       1 \r\n27.19308 \r\n\r\nTask 16\r\nDo the exact same thing as in Task 15 but this time you save the results of each iteration in a vector called bmi_predictions. Check out the content of this vector after creating it.\r\n\r\n\r\n# Create age vector\r\nage_vector <- c(20, 30, 40, 50, 60)\r\n\r\n# Create vector to store the results\r\nbmi_predictions <- numeric(length(age_vector))\r\n\r\n# Use for loop to make bmi predictions for each age and store it  \r\nfor (i in 1:length(age_vector)){\r\n          bmi_predictions[i] <- bmi_pred_funct(data_input = SSRC_data, \r\n                                               age_input = age_vector[i], \r\n                                               gender_input = \"female\", \r\n                                               education_input = \"medium\", \r\n                                               physical_input = \"medium\")\r\n\r\n}\r\n\r\n# Check out the vector\r\nbmi_predictions\r\n\r\n[1] 23.51512 24.43461 25.35410 26.27359 27.19308\r\n\r\nBootstrap\r\nIn the following tasks we always focus on the bmi prediction for a person that features the default values of our bmi_pred_funct function. We call such a person “default person”.\r\nTask 17\r\nUse our bmi_pred_funct function to check out the prediction for our default person.\r\n\r\n\r\n# Run the function \r\nbmi_pred_funct()\r\n\r\n       1 \r\n25.81384 \r\n\r\nTask 18\r\nUse the sample_n() command from the dplyr package to draw a random sample (n = 1000) with replacement from our original SSRC dataset. Call this sample SSRC_data_bootstrap.\r\n\r\n\r\n# Create dataset\r\nSSRC_data_bootstrap <- sample_n(SSRC_data, 1000, replace = TRUE)\r\n\r\n\r\nTask 19\r\nApply bmi_pred_funct to the SSRC_data_bootstrap dataset to predict the bmi of our default person.\r\n\r\n\r\n# Apply function to the bootstrap dataset\r\nbmi_pred_funct(data_input = SSRC_data_bootstrap)\r\n\r\n       1 \r\n25.53835 \r\n\r\nTask 20\r\nUse a for loop to repeat what you did in tasks 18/19 1000 times. Store the results in a vector called bmi_pred_boot. Check out the bmi_pred_boot vector.\r\n\r\n\r\n# Create vector for the results\r\nbmi_pred_boot <- numeric(1000)\r\n\r\n# Use for loop to fill results vector\r\nfor (i in 1:length(bmi_pred_boot)){\r\n     \r\n      # Create dataset\r\n      SSRC_data_bootstrap <- sample_n(SSRC_data, 1000, replace = TRUE)\r\n      \r\n      # Apply function to the bootstrap dataset and save it in the results vector\r\n      bmi_pred_boot[i] <- bmi_pred_funct(data_input = SSRC_data_bootstrap)\r\n}\r\n\r\n# Check out the vector\r\nhead(bmi_pred_boot)\r\n\r\n[1] 26.00716 25.79470 25.71776 25.78104 25.92591 25.52805\r\n\r\nTask 21\r\nCreate a histogram to analyse the distribution of bmi_pred_boot vector. (Just use hist() from the base R package)\r\n\r\n\r\n# Create Histogram\r\nhist(bmi_pred_boot)\r\n\r\n\r\n\r\nTask 22\r\nCalculate the mean, standard deviation and the 0.025 and 0.975 quantiles for the bmi_pred_boot vector.\r\n\r\n\r\n# Calculate mean\r\nmean(bmi_pred_boot)\r\n\r\n[1] 25.81505\r\n\r\n# Calculate standard deviation\r\nsd(bmi_pred_boot)\r\n\r\n[1] 0.3221995\r\n\r\n# Calculate quantiles\r\nquantile(bmi_pred_boot, probs = c(0.025, 0.975))\r\n\r\n    2.5%    97.5% \r\n25.20359 26.45178 \r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:03:06+02:00"
    },
    {
      "path": "C7_exercise.html",
      "title": "C7 - Exercise Sheet",
      "description": "Here you find the exercise sheet for chapter 7: \"R Markdown\"\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGetting ready\r\nTask 1\r\nTask 2\r\nTask 3\r\n\r\nR Markdown\r\nTask 4\r\n\r\n\r\nGetting ready\r\nTask 1\r\nCreate an R project for solving this Exercise Sheet.\r\nTask 2\r\nDownload the csv-file SSRC_data.csv and the rmd-file SSRC_7_template.rmd and put it in the R project folder you created in Task 1.\r\nTask 3\r\nOpen the SSRC_C7_template.rmd file.\r\nR Markdown\r\nTask 4\r\nOpen the model C7 - Model Report HTML in your browser. Your task is to replicate this file by yourself with R Markdown. Complete the SSRC_C7_template.rmd file to do so.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:03:27+02:00"
    },
    {
      "path": "C7_instructions.html",
      "title": "C7 - Instructions",
      "description": "Instructions for chapter 7: \"R Markdown\" \n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroduction\r\nGetting ready\r\nStep 1\r\nStep 2\r\n\r\nR Markdown\r\nStep 3\r\nStep 4\r\n\r\nAdditional Resources\r\n\r\nIntroduction\r\nIn this chapter you will learn what R Markdown is and how you can use it to create a reproducible report with it.\r\nTo meet this chapter’s learning objectives, please complete the respective exercise sheet.\r\nThe structure of this chapter is somewhat different from the preceding chapters. Please do not get confused by that and just follow the instructions below.\r\nGetting ready\r\nStep 1\r\nBriefly check out the exercise sheet for chapter 7 to get an impression of what you need to learn/know to solve it.\r\nStep 2\r\nSolve Tasks 1-2 of the exercise sheet.\r\nR Markdown\r\nStep 3\r\nWatch the following video: Intro to R Markdown\r\nSolve Tasks 3-4 of the exercise sheet.\r\nStep 4\r\nCompare your solutions to the sample solution R-Markdown file that can be downloaded via the following link:\r\nC7 - R Markdown Solution\r\nAdditional Resources\r\nCheat Sheet: R Markdown\r\nR Markdown Website\r\nRStudio -> Help -> Markdown Quick Reference\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:03:50+02:00"
    },
    {
      "path": "C7_solution.html",
      "title": "C7 - Sample Solution",
      "description": "Here you find the sample solution for the exercise sheet of chapter 7\n",
      "author": [],
      "contents": "\r\nTo access the R Markown solution, please click here:\r\nC7 - R Markdown Solution\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:04:12+02:00"
    },
    {
      "path": "C8_case_study.html",
      "title": "C8 - Case Study",
      "author": [],
      "contents": "\r\nAnalyzing and Predicting CVD Events\r\nImagine you are doing an internship in the data analytics team of a small health insurer with a portfolio of about 5000 insurees. In the recent past, the health insurer observed an increasing number of serious cardiovascular disease (CVD) incidences (e.g. strokes, myocardial infarctions, etc.). For that reason, the senior executives of the health insurer want to offer high risk individuals in their portfolio the participation in a lifestyle change and sports program. The executives asked your supervisor, the head of data analytics, to identify high risk individuals in the portfolio.\r\nSince your supervisor is always very busy, she assigned you to do this analytics project. All she did by herself so far was to acquire two datasets that are necessary for doing the project. The first dataset was acquired from an external data provider. This dataset contains data for 10.000 individuals and includes information on individual characteristics (e.g. gender, bmi,…) measured in 2010 and information on which of these individuals experienced a CVD event in the following 10 years. The second dataset includes all 5000 insurees in the health insurer’s portfolio. This dataset only includes information on individual characteristics which were measured just recently. To explain you the specific tasks and to tell you her expectations, she scheduled a short meeting with you. Before the meeting took place, she sent you an email with two csv-files that contain the data and two codebooks:\r\nDataset 1: SSRC_dataset_case_study_1.csv\r\nCodebook Dataset 1Dataset 2: SSRC_dataset_case_study_2.csv\r\nCodebook Dataset 2In your meeting your supervisor told you to complete the following 6 Tasks:\r\n1. Data preparation\r\nLoad the dataset and prepare it for the analysis\r\nAssign meaningful names to datasets, variables and factor levels\r\nCreate a variable that indicates whether an individual has hypertension (systolic bp >= 140 and/or diastolic bp >= 90) -> focus on this indicator instead of the numeric bp variables in the subsequent analysis.\r\n2. Data exploration\r\nAnalyze the distributions of each variable in dataset 1 by using an adequate graph.\r\nAnalyze the relationship between the outcome variable (CVD Event) and each of the numerical variables graphically.\r\n3. Regression analysis\r\nUse a logit model to analyze the relationship between individual characteristics and the 10 year probability of a CVD event.\r\n4. Identification of high risks in the portfolio\r\nUse the logit model results to estimate the 10 year probability of a CVD event in the portfolio of the health insurer.\r\nCreate a variable that indicates whether the estimated probability is above 10% and label those individuals as “high risk” individuals.\r\n5. Expectations regarding the number of CVD Events in the upcoming 10 years\r\nBased on the probabilities you estimated before, you are supposed to calculate the expected number of CVD events in the portfolio by simply summing up those probabilities.\r\nYour supervisor is also interested in the uncertainty that might be connected to the estimated number of CVD events in the portfolio. Hence, she wants you to use the bootstrap method to get an impression in which interval this number might lie with high probability. [Hint: Sample 1000 times with replacement from the dataset that is used to fit the logit model)\r\n6. Risk classification tool\r\nYou are supposed to write an easy to use R function that takes the variables V1 – V6 as inputs. The output of the function should say “Offer Life Style Change Program” if a new applicant features a 10 year probability of a CVD event above 10 % and “No Action Needed” otherwise.\r\nYou are also supposed to showcase that your function works for both low and high risk individuals.\r\nYour supervisor asks you to document all analysis steps and the respective results by means of a well structured R Markdown document.\r\nHave Fun!\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:04:35+02:00"
    },
    {
      "path": "C8_introduction.html",
      "title": "C8 - Introduction",
      "description": "Introduction to chapter 8: \"Case Study\" \n",
      "author": [],
      "contents": "\r\nIn this chapter you have the opportunity to do a small data analytics project completely on your own by solving a case study.\r\nAfter completing the preceding 7 chapters of the SSRC, you should now be able to solve the case study. All concepts and commands you need for solving the case study were covered in the SSRC.\r\nWhile solving the case study, it is absolutely legitimate to go back to the material of the preceding chapters to look up the commands needed. Sometimes it might be more efficient to google, though!\r\nA sample solution for the case study is also available. If you are stuck, you can take a look at the solution while you are working on the case study. However, this should be the very last thing to do. It is rather recommended, to compare your solution to the sample solution after completing all the tasks.\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:04:57+02:00"
    },
    {
      "path": "C8_solution.html",
      "title": "C8 - Sample Solution",
      "description": "Here you find the sample solution for the case study of chapter 8\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nData preparation\r\nData exploration\r\nVariation\r\nCovariation\r\n\r\nRegression analysis\r\nIdentification of high risks\r\nExpected number of events\r\nRisk classification tool\r\n\r\nData preparation\r\nLoad Packages\r\n\r\n\r\nlibrary(tidyverse)\r\n\r\n\r\nLoad and rename datasets\r\n\r\n\r\n### Load datasets and give them intuitive names\r\n\r\n# Dataset with cvd event data\r\ndata_cvd_event <- read.csv(\"SSRC_dataset_case_study_1.csv\")\r\n\r\n# Dataset with portfolio data\r\ndata_portfolio <- read.csv(\"SSRC_dataset_case_study_2.csv\")\r\n\r\n### Check out structure of the two datasets\r\nstr(data_cvd_event)\r\n\r\n'data.frame':   10000 obs. of  7 variables:\r\n $ v1: int  61 64 42 73 51 32 55 55 44 55 ...\r\n $ v2: int  1 0 1 0 1 1 1 1 1 1 ...\r\n $ v3: int  0 1 0 0 0 0 0 0 0 0 ...\r\n $ v4: num  30.1 26 30.4 26.9 27.4 20.7 46.4 22.6 26.3 38.6 ...\r\n $ v5: num  126 124 104 127 117 ...\r\n $ v6: num  62.8 73.5 61.6 70.1 81.3 ...\r\n $ v7: int  0 1 0 0 0 0 0 0 0 0 ...\r\n\r\nstr(data_portfolio)\r\n\r\n'data.frame':   5000 obs. of  6 variables:\r\n $ v1: int  24 56 35 34 39 34 49 41 26 29 ...\r\n $ v2: int  0 1 0 1 0 0 1 0 0 1 ...\r\n $ v3: int  0 0 0 1 0 1 0 0 0 1 ...\r\n $ v4: num  23.9 31.1 27.4 29.4 26.6 26.5 24.4 33.1 27 27.7 ...\r\n $ v5: num  120 121 118 126 137 ...\r\n $ v6: num  77.6 75.3 77.2 79.9 90.8 80 83.7 91.1 59.7 85.1 ...\r\n\r\nRename variables\r\n\r\n\r\n### Assign intuitive and self-explanatory names to the variables\r\n\r\n# CVD event dataset\r\ndata_cvd_event <- rename(data_cvd_event, age = v1,\r\n                                         gender = v2,\r\n                                         smoking = v3,\r\n                                         bmi = v4,\r\n                                         systolic_bp = v5,\r\n                                         diastolic_bp = v6,\r\n                                         cvd_event = v7)\r\n\r\nstr(data_cvd_event)\r\n\r\n'data.frame':   10000 obs. of  7 variables:\r\n $ age         : int  61 64 42 73 51 32 55 55 44 55 ...\r\n $ gender      : int  1 0 1 0 1 1 1 1 1 1 ...\r\n $ smoking     : int  0 1 0 0 0 0 0 0 0 0 ...\r\n $ bmi         : num  30.1 26 30.4 26.9 27.4 20.7 46.4 22.6 26.3 38.6 ...\r\n $ systolic_bp : num  126 124 104 127 117 ...\r\n $ diastolic_bp: num  62.8 73.5 61.6 70.1 81.3 ...\r\n $ cvd_event   : int  0 1 0 0 0 0 0 0 0 0 ...\r\n\r\n# Portfolio dataset\r\ndata_portfolio <- rename(data_portfolio, age = v1,\r\n                                         gender = v2,\r\n                                         smoking = v3,\r\n                                         bmi = v4,\r\n                                         systolic_bp = v5,\r\n                                         diastolic_bp = v6)\r\n\r\nstr(data_portfolio)\r\n\r\n'data.frame':   5000 obs. of  6 variables:\r\n $ age         : int  24 56 35 34 39 34 49 41 26 29 ...\r\n $ gender      : int  0 1 0 1 0 0 1 0 0 1 ...\r\n $ smoking     : int  0 0 0 1 0 1 0 0 0 1 ...\r\n $ bmi         : num  23.9 31.1 27.4 29.4 26.6 26.5 24.4 33.1 27 27.7 ...\r\n $ systolic_bp : num  120 121 118 126 137 ...\r\n $ diastolic_bp: num  77.6 75.3 77.2 79.9 90.8 80 83.7 91.1 59.7 85.1 ...\r\n\r\nCreate factors and rename levels\r\n\r\n\r\n# CVD event dataset\r\ndata_cvd_event <- data_cvd_event %>% \r\n                        mutate(gender = as.factor(gender)) %>% \r\n                        mutate(gender = fct_recode(gender, \"male\" = \"0\", \"female\" = \"1\")) %>% \r\n                        mutate(smoking = as.factor(smoking)) %>% \r\n                        mutate(smoking = fct_recode(smoking, \"no\" = \"0\", \"yes\" = \"1\")) %>% \r\n                        mutate(cvd_event = as.factor(cvd_event)) %>% \r\n                        mutate(cvd_event = fct_recode(cvd_event, \"no\" = \"0\", \"yes\" = \"1\"))\r\n\r\nhead(data_cvd_event)\r\n\r\n  age gender smoking  bmi systolic_bp diastolic_bp cvd_event\r\n1  61 female      no 30.1       126.3         62.8        no\r\n2  64   male     yes 26.0       123.6         73.5       yes\r\n3  42 female      no 30.4       104.1         61.6        no\r\n4  73   male      no 26.9       127.2         70.1        no\r\n5  51 female      no 27.4       117.0         81.3        no\r\n6  32 female      no 20.7       107.4         76.4        no\r\n\r\n# Portfolio dataset\r\ndata_portfolio <- data_portfolio %>% \r\n                        mutate(gender = as.factor(gender)) %>% \r\n                        mutate(gender = fct_recode(gender, \"male\" = \"0\", \"female\" = \"1\")) %>% \r\n                        mutate(smoking = as.factor(smoking)) %>% \r\n                        mutate(smoking = fct_recode(smoking, \"no\" = \"0\", \"yes\" = \"1\"))\r\n\r\nhead(data_portfolio)\r\n\r\n  age gender smoking  bmi systolic_bp diastolic_bp\r\n1  24   male      no 23.9       120.5         77.6\r\n2  56 female      no 31.1       120.9         75.3\r\n3  35   male      no 27.4       118.2         77.2\r\n4  34 female     yes 29.4       126.4         79.9\r\n5  39   male      no 26.6       137.0         90.8\r\n6  34   male     yes 26.5       130.5         80.0\r\n\r\nCreate hypertension variable\r\n\r\n\r\n### Create hypertension indicator\r\n\r\n# CVD event dataset\r\n data_cvd_event <- data_cvd_event %>% \r\n                          mutate(hypertension = if_else(systolic_bp >= 140 | diastolic_bp >= 90, \"yes\", \"no\")) %>% \r\n                          mutate(hypertension = as.factor(hypertension)) %>% \r\n                          mutate(hypertension = fct_relevel(hypertension, c(\"no\", \"yes\")))\r\nhead(data_cvd_event)\r\n\r\n  age gender smoking  bmi systolic_bp diastolic_bp cvd_event\r\n1  61 female      no 30.1       126.3         62.8        no\r\n2  64   male     yes 26.0       123.6         73.5       yes\r\n3  42 female      no 30.4       104.1         61.6        no\r\n4  73   male      no 26.9       127.2         70.1        no\r\n5  51 female      no 27.4       117.0         81.3        no\r\n6  32 female      no 20.7       107.4         76.4        no\r\n  hypertension\r\n1           no\r\n2           no\r\n3           no\r\n4           no\r\n5           no\r\n6           no\r\n\r\n# Portfolio dataset\r\ndata_portfolio <- data_portfolio %>% \r\n                          mutate(hypertension = if_else(systolic_bp >= 140 | diastolic_bp >= 90, \"yes\", \"no\")) %>% \r\n                          mutate(hypertension = as.factor(hypertension)) %>% \r\n                          mutate(hypertension = fct_relevel(hypertension, c(\"no\", \"yes\")))\r\n\r\nhead(data_portfolio)\r\n\r\n  age gender smoking  bmi systolic_bp diastolic_bp hypertension\r\n1  24   male      no 23.9       120.5         77.6           no\r\n2  56 female      no 31.1       120.9         75.3           no\r\n3  35   male      no 27.4       118.2         77.2           no\r\n4  34 female     yes 29.4       126.4         79.9           no\r\n5  39   male      no 26.6       137.0         90.8          yes\r\n6  34   male     yes 26.5       130.5         80.0           no\r\n\r\nData exploration\r\nVariation\r\nAge\r\n\r\n\r\n# Summary statistics\r\nsummary(data_cvd_event$age)\r\n\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n  22.00   37.00   48.00   48.27   59.00   77.00 \r\n\r\n# Density plot\r\nggplot(data = data_cvd_event) +\r\n  geom_density(mapping = aes(x = age))\r\n\r\n\r\n\r\nGender\r\n\r\n\r\n# Share per category\r\ntable(data_cvd_event$gender)/nrow(data_cvd_event)\r\n\r\n\r\n  male female \r\n0.4967 0.5033 \r\n\r\n# Bar chart\r\nggplot(data = data_cvd_event, mapping = aes(x = gender)) +\r\n  geom_bar()\r\n\r\n\r\n\r\nSmoking Status\r\n\r\n\r\n# Share per category\r\ntable(data_cvd_event$smoking)/nrow(data_cvd_event)\r\n\r\n\r\n    no    yes \r\n0.7381 0.2619 \r\n\r\n# Bar chart\r\nggplot(data = data_cvd_event, mapping = aes(x = smoking)) +\r\n  geom_bar()\r\n\r\n\r\n\r\nBMI\r\n\r\n\r\n# Summary statistics\r\nsummary(data_cvd_event$bmi)\r\n\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n  16.00   23.70   26.30   26.77   29.20   57.00 \r\n\r\n# Density plot\r\nggplot(data = data_cvd_event, mapping = aes(x = bmi)) +\r\n  geom_density()\r\n\r\n\r\n\r\nHypertension Status\r\n\r\n\r\n# Share per category\r\ntable(data_cvd_event$hypertension)/nrow(data_cvd_event)\r\n\r\n\r\n    no    yes \r\n0.6801 0.3199 \r\n\r\n# Bar chart\r\nggplot(data = data_cvd_event, mapping = aes(x = hypertension)) +\r\n  geom_bar()\r\n\r\n\r\n\r\nCVD event indicator\r\n\r\n\r\n# Share per category\r\ntable(data_cvd_event$cvd_event)/nrow(data_cvd_event)\r\n\r\n\r\n    no    yes \r\n0.9283 0.0717 \r\n\r\n# Bar chart\r\nggplot(data = data_cvd_event, mapping = aes(x = cvd_event)) +\r\n  geom_bar()\r\n\r\n\r\n\r\nCovariation\r\nCVD and age\r\n\r\n\r\n# Grouped summary\r\ndata_cvd_event %>% \r\n  group_by(cvd_event) %>% \r\n  summarize(mean_age = mean(age), median_age = median(age))\r\n\r\n# A tibble: 2 × 3\r\n  cvd_event mean_age median_age\r\n  <fct>        <dbl>      <int>\r\n1 no            47.2         47\r\n2 yes           62.3         64\r\n\r\n# Boxplot\r\nggplot(data = data_cvd_event) +\r\n  geom_boxplot(mapping = aes( x = age, y = cvd_event)) +\r\n  coord_flip()\r\n\r\n\r\n\r\nCVD and gender\r\n\r\n\r\n# 2 by 2 table\r\ntable(data_cvd_event$gender, data_cvd_event$cvd_event)/nrow(data_cvd_event)\r\n\r\n        \r\n             no    yes\r\n  male   0.4513 0.0454\r\n  female 0.4770 0.0263\r\n\r\nCVD and bmi\r\n\r\n\r\n# Grouped summary\r\ndata_cvd_event %>% \r\n  group_by(cvd_event) %>% \r\n  summarize(mean_bmi = mean(bmi), median_bmi = median(bmi))\r\n\r\n# A tibble: 2 × 3\r\n  cvd_event mean_bmi median_bmi\r\n  <fct>        <dbl>      <dbl>\r\n1 no            26.6       26.2\r\n2 yes           28.7       28  \r\n\r\n# Boxplot\r\nggplot(data = data_cvd_event, mapping = aes(x = bmi, y = cvd_event)) +\r\n  geom_boxplot() +\r\n  coord_flip()\r\n\r\n\r\n\r\nRegression analysis\r\n\r\n\r\n# Estimate logit model\r\nlogit_mod <- glm(cvd_event ~ age + gender + smoking + bmi + hypertension, \r\n                 family = \"binomial\", \r\n                 data = data_cvd_event)\r\n\r\n# Show results\r\nsummary(logit_mod)\r\n\r\n\r\nCall:\r\nglm(formula = cvd_event ~ age + gender + smoking + bmi + hypertension, \r\n    family = \"binomial\", data = data_cvd_event)\r\n\r\nDeviance Residuals: \r\n    Min       1Q   Median       3Q      Max  \r\n-1.4059  -0.3883  -0.2031  -0.1027   3.6937  \r\n\r\nCoefficients:\r\n                 Estimate Std. Error z value Pr(>|z|)    \r\n(Intercept)     -9.958050   0.390190 -25.521  < 2e-16 ***\r\nage              0.107249   0.004554  23.548  < 2e-16 ***\r\ngenderfemale    -0.525380   0.087202  -6.025 1.69e-09 ***\r\nsmokingyes       0.821408   0.100528   8.171 3.06e-16 ***\r\nbmi              0.042202   0.009698   4.352 1.35e-05 ***\r\nhypertensionyes  0.559488   0.086876   6.440 1.19e-10 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\n(Dispersion parameter for binomial family taken to be 1)\r\n\r\n    Null deviance: 5160.3  on 9999  degrees of freedom\r\nResidual deviance: 4040.7  on 9994  degrees of freedom\r\nAIC: 4052.7\r\n\r\nNumber of Fisher Scoring iterations: 7\r\n\r\nIdentification of high risks\r\n\r\n\r\n### Predict cvd event probabilities for the portfolio datases\r\ndata_portfolio <- mutate(data_portfolio, cvd_risk = predict(logit_mod, newdata = data_portfolio, type = \"response\"))\r\n  \r\n\r\n### Distribution of cvd_risk\r\n# Summary statistics\r\nsummary(data_portfolio$cvd_risk)\r\n\r\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \r\n0.0008237 0.0083777 0.0307492 0.0756245 0.1041549 0.6879710 \r\n\r\n# Density plot\r\nggplot(data = data_portfolio, mapping = aes(x = cvd_risk)) +\r\n  geom_density()\r\n\r\n\r\n### Create high risk indicator variable\r\ndata_portfolio <- mutate(data_portfolio, high_cvd_risk = if_else(cvd_risk > 0.1, \"yes\", \"no\"))\r\n\r\ntable(data_portfolio$high_cvd_risk)\r\n\r\n\r\n  no  yes \r\n3709 1291 \r\n\r\ntable(data_portfolio$high_cvd_risk)/nrow(data_portfolio)\r\n\r\n\r\n    no    yes \r\n0.7418 0.2582 \r\n\r\nExpected number of events\r\n\r\n\r\n### Calculate the expected number of cvd events in the upcoming 10 years in the portfolio\r\nexp_number_cvd_events <- sum(data_portfolio$cvd_risk)\r\n\r\nexp_number_cvd_events\r\n\r\n[1] 378.1226\r\n\r\n### Create vector with 1000 estimates for the expected numbers of cvd events in the portfolio\r\n\r\nexp_number_cvd_events_boot <- numeric(1000)\r\n\r\nfor (i in 1:length(exp_number_cvd_events_boot)){\r\n\r\n  data_cvd_event_boot <- sample_n(data_cvd_event, 5000, replace = TRUE)\r\n\r\n  logit_mod_boot <- glm(cvd_event ~ age + gender + smoking + bmi + hypertension, \r\n                        family = \"binomial\", \r\n                        data = data_cvd_event_boot)\r\n\r\n  data_portfolio <- mutate(data_portfolio, cvd_risk = predict(logit_mod_boot, newdata = data_portfolio, type = \"response\"))\r\n\r\n  exp_number_cvd_events_boot[i] <- sum(data_portfolio$cvd_risk)\r\n}\r\n\r\n### Analyze the vector with the results to get an idea about the uncertainty connected to the expected number of cvd events in the portfolio\r\n\r\n# Create Histogram\r\nhist(exp_number_cvd_events_boot)\r\n\r\n\r\n# Calculate mean\r\nmean(exp_number_cvd_events_boot)\r\n\r\n[1] 378.2167\r\n\r\n# Calculate standard deviation\r\nsd(exp_number_cvd_events_boot)\r\n\r\n[1] 17.81053\r\n\r\n# Calculate quantiles\r\nquantile(exp_number_cvd_events_boot, probs = c(0.025, 0.975))\r\n\r\n    2.5%    97.5% \r\n343.6149 409.5118 \r\n\r\nRisk classification tool\r\n\r\n\r\n### Build risk classification tool\r\ncvd_risk_classification <- function(age_input = 50, \r\n                                    gender_input = \"female\", \r\n                                    smoking_input = \"no\", \r\n                                    bmi_input = 25, \r\n                                    systolic_bp_input = 130, \r\n                                    diastolic_bp_input = 80){\r\n      \r\n  # Create hypertension indicator\r\n   hypertension_input <- if_else(systolic_bp_input >= 140 | diastolic_bp_input >= 90, \"yes\", \"no\")\r\n  \r\n  # Create input dataframe\r\n   data_new <- data.frame(age = c(age_input),\r\n                          gender = c(gender_input),\r\n                          smoking = c(smoking_input),\r\n                          bmi = c(bmi_input),\r\n                          hypertension = c(hypertension_input))\r\n   \r\n  # Calculate risk score\r\n   risk_score <- predict(logit_mod_boot, newdata = data_new, type = \"response\")\r\n  \r\n  # Create recommendation variable \r\n   recommendation <- if_else(risk_score > 0.1, \"Offer Life Style Change Program\", \"No Action Needed\") \r\n  \r\n  # Output recommendation \r\n   print(recommendation)\r\n  \r\n}\r\n\r\n### Check the functionality of the function\r\n# Low risk applicant\r\ncvd_risk_classification(age_input = 35, \r\n                        gender_input = \"female\", \r\n                        smoking_input = \"no\", \r\n                        bmi_input = 23, \r\n                        systolic_bp_input = 127, \r\n                        diastolic_bp_input = 79)\r\n\r\n[1] \"No Action Needed\"\r\n\r\n# High risk applicant\r\ncvd_risk_classification(age_input = 57, \r\n                        gender_input = \"male\", \r\n                        smoking_input = \"yes\", \r\n                        bmi_input = 31, \r\n                        systolic_bp_input = 145, \r\n                        diastolic_bp_input = 97)\r\n\r\n[1] \"Offer Life Style Change Program\"\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:06:30+02:00"
    },
    {
      "path": "FAQ.html",
      "title": "FAQ",
      "description": "Frequently asked questions are answered on this site\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nI have a question regarding the mechanics of the Self-Study R Course. What shall I do?\r\nI have a question regarding the sample solution. What shall I do?\r\nI found a mistake or bug while doing this course. What shall I do?\r\nA link in the instructions document does not work or does not make sense. What shall I do?\r\nHow can I download R-scripts, html-files, etc. from the website on my computer?\r\nDo I have to pay for this course?\r\nI am a lecturer at a different university/school. May I integrate the SSRC in my teaching?\r\nI like this course. What shall I do?\r\nI do not like this course. What shall I do?\r\n\r\nI have a question regarding the mechanics of the Self-Study R Course. What shall I do?\r\nIf you have a question on how to work with the SSRC, then please first check the FAQs. If you do not find a solution to your problem there, then please send an e-mail with the subject “SSRC” to php@sg.tum.de. We will then try to complement the FAQs accordingly.\r\nI have a question regarding the sample solution. What shall I do?\r\nIf you think that the sample solution is somewhat confusing or even wrong, then please send an e-mail with the subject “SSRC” to php@sg.tum.de. We will try to improve the sample solution based on your feedback.\r\nUnfortunately, we do not have the capacity to provide support if you do not understand a solution or if you have questions that go beyond the sample solution. In such cases, we recommend to do a google research or to watch YouTube videos that are related to your problem/question.\r\nI found a mistake or bug while doing this course. What shall I do?\r\nIf you find a mistake or bug or you have suggestions for improvement, please send an e-mail with the subject “SSRC” to php@sg.tum.de.\r\nA link in the instructions document does not work or does not make sense. What shall I do?\r\nIf one of the links in an instrcution document does not work anymore or directs you to a video/website that does not make sense in this context, then please send an e-mail with the subject “SSRC” to php@sg.tum.de.\r\nHow can I download R-scripts, html-files, etc. from the website on my computer?\r\nJust make a right click on the respective link and then select “save target as…” / “Ziel speichern unter…”.\r\nDo I have to pay for this course?\r\nNo, this course is completely free of charge and there are also no other strings attached.\r\nI am a lecturer at a different university/school. May I integrate the SSRC in my teaching?\r\nYes, this is not a problem at all and we are happy if you do so!\r\nWe created this course for the purpose of teaching our students R at TU Munich and still use it intensely for this purpose.\r\nBased on our experience with the SSRC we recommend lecturers to offer Q&A sessions accompanying the SSRC where students can approach you if they have technical problems or clarifying questions regarding the sample solution.\r\nIf you actually use the SSRC for your teaching, it would be great if you could share your experience with us afterwards.\r\nI like this course. What shall I do?\r\nWe are glad that you like the course and hope that you learned a lot while doing it!\r\nIf you liked the course, you could help us to raise the awareness of the SSRC by\r\nfollowing us on twitter (TUMPublicHealth)\r\ntwittering something positive a about the SSRC referencing our twitter account\r\nspreading the word among your peers and people who might be interested in the SSRC\r\nThanks!\r\nI do not like this course. What shall I do?\r\nIf you did not like the course, it would be great if you could tell us why. If you can also provide suggestions for improvements, we would be very happy.\r\nTo provide your us with your feedback, please send an email with the subject “SSRC” to php@sg.tum.de\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:06:53+02:00"
    },
    {
      "path": "index.html",
      "title": "Self-Study R Course",
      "description": "Offered by the Professorship of Public Health and Prevention at TUM.",
      "author": [],
      "contents": "\r\n\r\nContents\r\nAbout this course\r\nTarget Audience\r\nBackground\r\nFeedback\r\nContact\r\n\r\nAbout this course\r\nWelcome to our Self-Study R Course (SSRC)!\r\nThe purpose of the SSRC is to teach participants basic R programming skills from scratch.\r\nThe SSRC is comprised of 8 chapters that build upon each other.\r\nCompleting all chapters requires a time investment of about 30 hours. Since the SSRC is a pure self-study course, participants are free to decide when to make this time investment.\r\nParticipants who complete the whole course will be rewarded with a solid foundation of R programming skills. Furthermore, they will learn how to navigate through the R and R Studio universe. They will learn how to learn new methods and commands by themselves, which is by far the most important skill for anybody who is working with R or any other programming language.\r\nFor more details about the SSRC please check out the Course Introduction.\r\nTarget Audience\r\nThe SSRC is designed for everybody who wants to acquire basic R programming skills in a structured way and in a reasonable amount of time.\r\nNo prior knowledge in R or any other programming language is required. We assume participants to know some very basic statistics concepts, though. To learn more about these requirements, please check out the “Prior Knowledge” section of the Course Introduction.\r\nBackground\r\nThe SSRC has been developed by the Professorship of Public Health and Prevention at TUM. The goal of our interdisciplinary team is to generate and synthesize scientific evidence to support decision making in health systems and health policy, with the ultimate goal of improving population health.\r\nWe are teaching several modules in our departments Master’s program. In two of these modules, students have to analyze data in R to meet the learning objectives of the respective modules.\r\nWhen we started teaching in the Master’s program in 2020/2021, we learned that the academic background of students and hence also their prior knowledge in statistics and R are very diverse. There was no doubt that we have to bring all students on a certain R skill level before the programming parts of our modules can start. After intense discussions on how to teach the required R skills, we decided to offer a voluntary self-study R course accompanied by a series of Q&A sessions in the beginning of the semester. We decided to go with a self-study course for two reasons. Firstly, a self-study course enables students to learn at their own pace. This lets us account for the heterogeneity of students in our Master’s program. Secondly, a self-study course gives students some discretion on when to do the course. This lets us account for the fact that students in our Master’s program have very diverse schedules. So far, our experiences with the self-study format have been quite good and our students also seem to appreciate the self-study nature of the course.\r\nThe SSRC has been initially developed in the winter term of 2021/22. In the same term it has been offered to students for the very first time. In the summer term 2022 it has been offered for the second time. In the first two terms, the SSRC website did not exist yet. Instead the material was available in the university teaching file system. However, this way of presentation neither was convenient for lecturers nor for students. Hence, we decided to create this website to organize and offer the SSRC from the winter term 2022/2023 on. Based on the feedback we received from students who did the SSRC in the winter term 2022/2023, we revised the website in May 2023.\r\nThe SSRC itself benefits tremendously from the R community. Actually, the course would not work at all without the content provided by the community members. In return, we decided to make the SSRC publicly available and (of course) also free of charge.\r\nIf you like the SSRC and the idea behind it, you can help us to raise the awareness of it by twittering something positive a about the SSRC and/or by spreading the word among your peers and people who might be interested in the SSRC.\r\nFeedback\r\nIn the past, the SSRC heavily benefited from the feedback of the students doing the course. Thank you very much to all of you!\r\nBut for sure the SSRC is not perfect yet and there is still a lot of room for improvements. Hence, we are very happy about any constructive feedback. Just send an e-mail with the subject “SSRC” to php@sg.tum.de.\r\nContact\r\nProfessorship of Public Health and Prevention\r\nDepartment for Sport and Health Sciences\r\nTechnical University of Munich\r\nHomepage: Professorship of Public Health and Prevention\r\nE-Mail: php@sg.tum.de\r\nTwitter: TUMPublicHealth\r\n\r\n\r\n\r\n",
      "last_modified": "2023-10-10T11:07:17+02:00"
    }
  ],
  "collections": []
}
