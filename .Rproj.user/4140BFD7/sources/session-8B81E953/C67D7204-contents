---
title: 'SSRC - Case Study - Solution'
output:
  html_document:
    theme: journal
    toc: true
    toc_float:
      collapsed: false
      smooth_scroll: false
    toc_depth: 4
    number_sections: true
    fig_caption: true
---

# Data preparation

**Load Packages**

```{r message=FALSE, warning=FALSE }
library(tidyverse)
```


**Load and rename datasets** 

```{r}
### Load datasets and give them intuitive names

# Dataset with cvd event data
data_cvd_event <- read.csv("SSRC_dataset_case_study_1.csv")

# Dataset with portfolio data
data_portfolio <- read.csv("SSRC_dataset_case_study_2.csv")

### Check out structure of the two datasets
str(data_cvd_event)
str(data_portfolio)

```

**Rename variables** 

```{r}
### Assign intuitive and self-explanatory names to the variables

# CVD event dataset
data_cvd_event <- rename(data_cvd_event, age = v1,
                                         gender = v2,
                                         smoking = v3,
                                         bmi = v4,
                                         systolic_bp = v5,
                                         diastolic_bp = v6,
                                         cvd_event = v7)

str(data_cvd_event)

# Portfolio dataset
data_portfolio <- rename(data_portfolio, age = v1,
                                         gender = v2,
                                         smoking = v3,
                                         bmi = v4,
                                         systolic_bp = v5,
                                         diastolic_bp = v6)

str(data_portfolio)

```

**Create factors and rename levels**

```{r}
# CVD event dataset
data_cvd_event <- data_cvd_event %>% 
                        mutate(gender = as.factor(gender)) %>% 
                        mutate(gender = fct_recode(gender, "male" = "0", "female" = "1")) %>% 
                        mutate(smoking = as.factor(smoking)) %>% 
                        mutate(smoking = fct_recode(smoking, "no" = "0", "yes" = "1")) %>% 
                        mutate(cvd_event = as.factor(cvd_event)) %>% 
                        mutate(cvd_event = fct_recode(cvd_event, "no" = "0", "yes" = "1"))

head(data_cvd_event)

# Portfolio dataset
data_portfolio <- data_portfolio %>% 
                        mutate(gender = as.factor(gender)) %>% 
                        mutate(gender = fct_recode(gender, "male" = "0", "female" = "1")) %>% 
                        mutate(smoking = as.factor(smoking)) %>% 
                        mutate(smoking = fct_recode(smoking, "no" = "0", "yes" = "1"))

head(data_portfolio)
```

**Create hypertension variable**

```{r}
### Create hypertension indicator

# CVD event dataset
 data_cvd_event <- data_cvd_event %>% 
                          mutate(hypertension = if_else(systolic_bp >= 140 | diastolic_bp >= 90, "yes", "no")) %>% 
                          mutate(hypertension = as.factor(hypertension)) %>% 
                          mutate(hypertension = fct_relevel(hypertension, c("no", "yes")))
head(data_cvd_event)

# Portfolio dataset
data_portfolio <- data_portfolio %>% 
                          mutate(hypertension = if_else(systolic_bp >= 140 | diastolic_bp >= 90, "yes", "no")) %>% 
                          mutate(hypertension = as.factor(hypertension)) %>% 
                          mutate(hypertension = fct_relevel(hypertension, c("no", "yes")))

head(data_portfolio)

```

# Data exploration
## Variation

**Age**

```{r}
# Summary statistics
summary(data_cvd_event$age)

# Density plot
ggplot(data = data_cvd_event) +
  geom_density(mapping = aes(x = age))
```

**Gender**

```{r}
# Share per category
table(data_cvd_event$gender)/nrow(data_cvd_event)

# Bar chart
ggplot(data = data_cvd_event) +
  geom_bar(mapping = aes(x = gender))

```

**Smoking Status**

```{r}
# Share per category
table(data_cvd_event$smoking)/nrow(data_cvd_event)

# Bar chart
ggplot(data = data_cvd_event) +
  geom_bar(mapping = aes(x = smoking))

```

**BMI**

```{r}
# Summary statistics
summary(data_cvd_event$bmi)

# Density plot
ggplot(data = data_cvd_event) +
  geom_density(mapping = aes(x = bmi))
```

**Hypertension Status**

```{r}
# Share per category
table(data_cvd_event$hypertension)/nrow(data_cvd_event)

# Bar chart
ggplot(data = data_cvd_event) +
  geom_bar(mapping = aes(x = hypertension))

```

**CVD event indicator**

```{r}
# Share per category
table(data_cvd_event$cvd_event)/nrow(data_cvd_event)

# Bar chart
ggplot(data = data_cvd_event) +
  geom_bar(mapping = aes(x = cvd_event))

```


## Covariation

**CVD and age**

```{r}
# Grouped summary
data_cvd_event %>% 
  group_by(cvd_event) %>% 
  summarize(mean_age = mean(age), median_age = median(age))

# Boxplot
ggplot(data = data_cvd_event) +
  geom_boxplot(mapping = aes( x = age, y = cvd_event)) +
  coord_flip()

```

**CVD and gender**

```{r}
# 2 by 2 table
table(data_cvd_event$gender, data_cvd_event$cvd_event)/nrow(data_cvd_event)


# Create Heat Map
data_cvd_event %>% 
   count(gender, cvd_event) %>% 
   ggplot() +
   geom_tile(mapping = aes(x = gender, y = cvd_event, fill = n))

```

**CVD and bmi**

```{r}
# Grouped summary
data_cvd_event %>% 
  group_by(cvd_event) %>% 
  summarize(mean_bmi = mean(bmi), median_bmi = median(bmi))

# Boxplot
ggplot(data = data_cvd_event) +
  geom_boxplot(mapping = aes(x = bmi, y = cvd_event)) +
  coord_flip()

```

# Regression analysis

```{r}
# Estimate logit model
logit_mod <- glm(cvd_event ~ age + gender + smoking + bmi + hypertension, 
                 family = "binomial", 
                 data = data_cvd_event)

# Show results
summary(logit_mod)

```

# Identification of high risks

```{r}
### Predict cvd event probabilities for the portfolio datases
data_portfolio <- mutate(data_portfolio, cvd_risk = predict(logit_mod, newdata = data_portfolio, type = "response"))
  

### Distribution of cvd_risk
# Summary statistics
summary(data_portfolio$cvd_risk)

# Density plot
ggplot(data = data_portfolio) +
  geom_density(mapping = aes(x = cvd_risk))

### Create high risk indicator variable
data_portfolio <- mutate(data_portfolio, high_cvd_risk = if_else(cvd_risk > 0.1, "yes", "no"))

table(data_portfolio$high_cvd_risk)

table(data_portfolio$high_cvd_risk)/nrow(data_portfolio)

```


# Expected number of events

```{r}
### Calculate the expected number of cvd events in the upcoming 10 years in the portfolio
exp_number_cvd_events <- sum(data_portfolio$cvd_risk)

exp_number_cvd_events

### Create vector with 1000 estimates for the expected numbers of cvd events in the portfolio

exp_number_cvd_events_boot <- numeric(1000)

for (i in 1:length(exp_number_cvd_events_boot)){

  data_cvd_event_boot <- sample_n(data_cvd_event, 5000, replace = TRUE)

  logit_mod_boot <- glm(cvd_event ~ age + gender + smoking + bmi + hypertension, 
                        family = "binomial", 
                        data = data_cvd_event_boot)

  data_portfolio <- mutate(data_portfolio, cvd_risk = predict(logit_mod_boot, newdata = data_portfolio, type = "response"))

  exp_number_cvd_events_boot[i] <- sum(data_portfolio$cvd_risk)
}

### Analyze the vector with the results to get an idea about the uncertainty connected to the expected number of cvd events in the portfolio

# Create Histogram
hist(exp_number_cvd_events_boot)

# Calculate mean
mean(exp_number_cvd_events_boot)

# Calculate standard deviation
sd(exp_number_cvd_events_boot)

# Calculate quantiles
quantile(exp_number_cvd_events_boot, probs = c(0.025, 0.975))


```

# Risk classification tool

```{r}
### Build risk classification tool
cvd_risk_classification <- function(age_input = 50, 
                                    gender_input = "female", 
                                    smoking_input = "no", 
                                    bmi_input = 25, 
                                    systolic_bp_input = 130, 
                                    diastolic_bp_input = 80){
      
  # Create hypertension indicator
   hypertension_input <- if_else(systolic_bp_input >= 140 | diastolic_bp_input >= 90, "yes", "no")
  
  # Create input dataframe
   data_new <- data.frame(age = c(age_input),
                          gender = c(gender_input),
                          smoking = c(smoking_input),
                          bmi = c(bmi_input),
                          hypertension = c(hypertension_input))
   
  # Calculate risk score
   risk_score <- predict(logit_mod_boot, newdata = data_new, type = "response")
  
  # Create recommendation variable 
   recommendation <- if_else(risk_score > 0.1, "Offer Life Style Change Program", "No Action Needed") 
  
  # Output recommendation 
   print(recommendation)
  
}

### Check the functionality of the function
# Low risk applicant
cvd_risk_classification(age_input = 35, 
                        gender_input = "female", 
                        smoking_input = "no", 
                        bmi_input = 23, 
                        systolic_bp_input = 127, 
                        diastolic_bp_input = 79)


# High risk applicant
cvd_risk_classification(age_input = 57, 
                        gender_input = "male", 
                        smoking_input = "yes", 
                        bmi_input = 31, 
                        systolic_bp_input = 145, 
                        diastolic_bp_input = 97)

  